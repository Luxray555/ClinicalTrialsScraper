{
  "name": "AI Scraper API",
  "nodes": [
    {
      "parameters": {
        "content": "## Scrape Clinical Trial by URL",
        "height": 720,
        "width": 1760
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -360,
        -120
      ],
      "id": "7c920ec6-fc1f-46ed-9332-9c77a71f0e69",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -560,
        40
      ],
      "id": "7c893826-46b5-48d3-a7c0-e800bd0674f0",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "model": "mistral-large-latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "typeVersion": 1,
      "position": [
        -1760,
        420
      ],
      "id": "13f66616-4f8b-4a83-ba04-8a696b6ad22e",
      "name": "Mistral Cloud Chat Model",
      "credentials": {
        "mistralCloudApi": {
          "id": "eBAfhPYwoDL6vFvB",
          "name": "Mistral Cloud account"
        }
      }
    },
    {
      "parameters": {
        "model": "mistral-large-latest",
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "typeVersion": 1,
      "position": [
        640,
        460
      ],
      "id": "d6cce061-f5dd-41e4-a892-d8f823071a73",
      "name": "Mistral Cloud Chat Model1",
      "credentials": {
        "mistralCloudApi": {
          "id": "eBAfhPYwoDL6vFvB",
          "name": "Mistral Cloud account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Voici l'url de la page de recherche:\n{{ $('Search Page Request').first().json.url }}\nVoici la page html:\n{{ $json.data }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Tu es un expert en extraction d‚Äôinformations depuis du HTML (web scraping).\nTon r√¥le est d‚Äôanalyser une page de recherche d‚Äôessais cliniques et de me renvoyer :\n\nLes URLs compl√®tes des essais cliniques list√©s dans la page (s'ils sont pr√©sents) dans le champ urls.\n\nLes informations compl√®tes des essais cliniques qui n'ont pas d'URL de redirection dans leurs page de d√©tail, tu ajoutera leurs informations dans le champ clinical_trials.\nIl ne faut surtout pas que un essai clinique ayant un url de redirection de detail soit √©galement mit dans clinical_trials.\n\nüìå R√®gles strictes √† respecter :\n\nTu ne dois jamais inventer ou deviner d‚ÄôURL.\n\nSi aucun essai clinique n‚Äôest pr√©sent (page vide ou fin de pagination), renvoie un objet contenant deux listes vides.\n\nPour les liens relatifs, utilise l‚ÄôURL source de la page pour les transformer en liens absolus.\n\nTu dois renvoyer le r√©sultat strictement au format JSON SCHEMA suivant :\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"urls\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"format\": \"uri\"\n      }\n    },\n    \"clinical_trials\": {\n      \"type\": \"array\",\n      \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"originalSourceId\": {\n              \"type\": \"string\"\n            },\n            \"trialSourceUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri\"\n            },\n            \"title\": {\n              \"type\": \"string\"\n            },\n            \"currentEnrollmentCount\": {\n              \"type\": \"integer\"\n            },\n            \"organization\": {\n              \"type\": \"string\"\n            },\n            \"summary\": {\n              \"type\": \"string\"\n            },\n            \"status\": {\n              \"type\": \"string\",\n              \"enum\": [\"COMPLETED\", \"TERMINATED\", \"RECRUITING\", \"NOT_YET_RECRUITING\", \"WITHDRAWN\", \"SUSPENDED\", \"UNKNOWN\", \"ACTIVE_NOT_RECRUITING\", \"ENROLLING_BY_INVITATION\", \"APPROVED_FOR_MARKETING\", \"NO_LONGER_AVAILABLE\", \"TEMPORARILY_NOT_AVAILABLE\"]\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\"INTERVENTIONAL\", \"OBSERVATIONAL\", \"EXPANDED_ACCESS\"]\n            },\n            \"phase\": {\n              \"type\": \"string\",\n              \"enum\": [\"EARLY_PHASE1\", \"PHASE1\", \"PHASE2\", \"PHASE3\", \"PHASE4\", \"NA\"]\n            },\n            \"dates\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"startDate\": {\n                  \"type\": \"string\",\n                  \"format\": \"date\"\n                },\n                \"estimatedCompletionDate\": {\n                  \"type\": \"string\",\n                  \"format\": \"date\"\n                }\n              }\n            },\n            \"conditions\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\":{\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"interventions\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\"DRUG\", \"BEHAVIORAL\", \"DEVICE\", \"BIOLOGICAL\", \"OTHER\", \"COMBINATION_PRODUCT\", \"PROCEDURE\", \"RADIATION\", \"DIETARY_SUPPLEMENT\", \"DIAGNOSTIC_TEST\", \"GENETIC\"]\n                  }\n                }\n              }\n            },\n            \"eligibility\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"gender\": {\n                  \"type\": \"string\",\n                  \"enum\": [\"ALL\", \"MALE\", \"FEMALE\"]\n                },\n                \"minAge\": {\n                  \"type\": [\"integer\", \"null\"]\n                },\n                \"maxAge\": {\n                  \"type\": [\"integer\", \"null\"]\n                },\n                \"eligibilityCriteria\": {\n                  \"type\": \"string\",\n                  \"description\": \"Description complete avec les titres des egibilit√© √©galement avec les saut √† la ligne\"\n                }\n              }\n            },\n            \"sponsor\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"collaborators\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"contacts\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"format\": \"email\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"phone\": {\n                    \"type\": \"string\"\n                  },\n                  \"isMainContact\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            },\n            \"locations\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"city\": {\n                    \"type\": \"string\"\n                  },\n                  \"country\": {\n                    \"type\": \"string\"\n                  },\n                  \"facility\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": [\"originalSource_id\", \"trialSource_url\", \"title\", \"currentEnrollmentCount\", \"organization\", \"summary\", \"status\", \"type\", \"phase\", \"dates\", \"conditions\", \"interventions\", \"eligibility\", \"sponsor\", \"collaborators\", \"contacts\", \"locations\"]\n      }\n    }\n  },\n  \"required\": [\"urls\"]\n}\n\nTu dois automatiquement trier chaque essai clinique dans le bon champ :\n\nSi l‚Äôessai poss√®de une URL directe (ex. fichier PDF ou page de d√©tail), place-le dans \"urls\".\n\nSinon, extrais toutes les donn√©es disponibles et place-le dans \"clinical_trials\"."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -1760,
        40
      ],
      "id": "61a5e0e7-331a-4193-8516-66e7e1afa447",
      "name": "AI Agent Search Page"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Voici la page html:\n{{ $json.data }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Tu es un expert en analyse HTML et en extraction d'informations web (web scraping). Ton r√¥le est d'examiner une page d'essaie clinique et d'identifier les donn√©es n√©cessaires requis dans le format JSON attendu ci dessous. Tu dois r√©pondre uniquement en JSON structur√©, sans commentaire.\n\nFormat JSON SCHEMA attendu :\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"originalSourceId\": {\n      \"type\": \"string\"\n    },\n    \"trialSourceUrl\": {\n      \"type\": \"string\",\n      \"format\": \"uri\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"currentEnrollmentCount\": {\n      \"type\": \"integer\"\n    },\n    \"organization\": {\n      \"type\": \"string\"\n    },\n    \"summary\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\"COMPLETED\", \"TERMINATED\", \"RECRUITING\", \"NOT_YET_RECRUITING\", \"WITHDRAWN\", \"SUSPENDED\", \"UNKNOWN\", \"ACTIVE_NOT_RECRUITING\", \"ENROLLING_BY_INVITATION\", \"APPROVED_FOR_MARKETING\", \"NO_LONGER_AVAILABLE\", \"TEMPORARILY_NOT_AVAILABLE\"]\n    },\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\"INTERVENTIONAL\", \"OBSERVATIONAL\", \"EXPANDED_ACCESS\"]\n    },\n    \"phase\": {\n      \"type\": \"string\",\n      \"enum\": [\"EARLY_PHASE1\", \"PHASE1\", \"PHASE2\", \"PHASE3\", \"PHASE4\", \"NA\"]\n    },\n    \"dates\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"startDate\": {\n          \"type\": \"string\",\n          \"format\": \"date\"\n        },\n        \"estimatedCompletionDate\": {\n          \"type\": \"string\",\n          \"format\": \"date\"\n        }\n      }\n    },\n    \"conditions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\":{\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"interventions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\"DRUG\", \"BEHAVIORAL\", \"DEVICE\", \"BIOLOGICAL\", \"OTHER\", \"COMBINATION_PRODUCT\", \"PROCEDURE\", \"RADIATION\", \"DIETARY_SUPPLEMENT\", \"DIAGNOSTIC_TEST\", \"GENETIC\"]\n          }\n        }\n      }\n    },\n    \"eligibility\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"gender\": {\n          \"type\": \"string\",\n          \"enum\": [\"ALL\", \"MALE\", \"FEMALE\"]\n        },\n        \"minAge\": {\n          \"type\": [\"integer\", \"null\"]\n        },\n        \"maxAge\": {\n          \"type\": [\"integer\", \"null\"]\n        },\n        \"eligibilityCriteria\": {\n          \"type\": \"string\",\n          \"description\": \"Description complete avec les titres des egibilit√© √©galement avec les saut √† la ligne\"\n        }\n      }\n    },\n    \"sponsor\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"collaborators\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"contacts\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"phone\": {\n            \"type\": \"string\"\n          },\n          \"isMainContact\": {\n            \"type\": \"boolean\"\n          }\n        }\n      }\n    },\n    \"locations\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"city\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\"\n          },\n          \"facility\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": [\"originalSource_id\", \"trialSource_url\", \"title\", \"currentEnrollmentCount\", \"organization\", \"summary\", \"status\", \"type\", \"phase\", \"dates\", \"conditions\", \"interventions\", \"eligibility\", \"sponsor\", \"collaborators\", \"contacts\", \"locations\"]\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        640,
        40
      ],
      "id": "63f70d5e-dd19-451a-90d7-7445bb3b778a",
      "name": "AI Agent Scrape Page"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        720,
        280
      ],
      "id": "ef11e46a-5e4e-4f7d-8f7d-844ab41adab3",
      "name": "Auto-fixing Output Parser"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        -1640,
        240
      ],
      "id": "bb1cac17-6e21-4b24-a9c9-0d7ded86ecf0",
      "name": "Auto-fixing Output Parser1"
    },
    {
      "parameters": {
        "url": "={{ $('Url Pagination Formater').first().json.url }}{{ $json.page }}",
        "options": {
          "waitUntil": "networkidle0"
        }
      },
      "type": "n8n-nodes-puppeteer.puppeteer",
      "typeVersion": 1,
      "position": [
        -2800,
        40
      ],
      "id": "73f199d9-f0e9-4ae0-b542-0cf8d1feea62",
      "name": "Search Page Request"
    },
    {
      "parameters": {
        "html": "={{ $json.body }}",
        "options": {
          "useLinkReferenceDefinitions": true
        }
      },
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        -2100,
        40
      ],
      "id": "a73e7a29-9fa1-4eaf-b029-b9c2f6d2c145",
      "name": "Search Page To Markdown"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "dataPropertyName": "=body",
        "extractionValues": {
          "values": [
            {
              "key": "body",
              "cssSelector": "body",
              "returnValue": "html"
            }
          ]
        },
        "options": {
          "trimValues": true,
          "cleanUpText": true
        }
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -2420,
        40
      ],
      "id": "491a64e7-84ea-4560-9490-5952563ddec1",
      "name": "Get Search Page Body"
    },
    {
      "parameters": {
        "jsCode": "let items = [];\n\nfor (const url of $('AI Agent Search Page').first().json.output.urls) {\n  items.push({\n    json: {\n      url: url\n    }\n  });\n}\n\nreturn items;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -740,
        40
      ],
      "id": "311fd23e-fd3e-4dec-b4da-844c94d5d654",
      "name": "Urls list for loop"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "dataPropertyName": "=body",
        "extractionValues": {
          "values": [
            {
              "key": "body",
              "cssSelector": "body",
              "returnValue": "html"
            }
          ]
        },
        "options": {
          "trimValues": true,
          "cleanUpText": true
        }
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        140,
        40
      ],
      "id": "ddfe29bb-d1cb-47b7-bbdc-d4c350537ff4",
      "name": "Get Clinical Trial Page Body"
    },
    {
      "parameters": {
        "html": "={{ $json.body }}",
        "options": {}
      },
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        280,
        40
      ],
      "id": "a05ce5e1-01c7-47b1-8ccf-c02e1cc7bd1d",
      "name": "Clinical Trial Page To Markdown"
    },
    {
      "parameters": {
        "jsCode": "var item = {\n  clinical_trial: {\n    // Infos d'essai clinique ajout√©es\n    title: $input.first().json.output.title,\n    status: $input.first().json.output.status,\n    summary: $input.first().json.output.summary,\n    currentEnrollmentCount: $input.first().json.output.currentEnrollmentCount,\n    type: $input.first().json.output.type,\n    phase: $input.first().json.output.phase,\n    organization: $input.first().json.output.organization,\n    dates: $input.first().json.output.dates,\n    conditions: $input.first().json.output.conditions,\n    interventions: $input.first().json.output.interventions,\n    eligibility: $input.first().json.output.eligibility,\n    sponsor: $input.first().json.output.sponsor,\n    collaborators: $input.first().json.output.collaborators,\n    contacts: $input.first().json.output.contacts,\n    locations: $input.first().json.output.locations,\n    sourceMetaData: {\n      originalSourceId: $input.first().json.output.originalSourceId,\n      trialSourceUrl: $input.first().json.output.trialSourceUrl,\n      dataSource: {\n        name: \"ClinicalTrials.gov public API\",\n        type: \"API\",\n        uri: $('Start Webhook').first().json.query.url\n      }\n    }\n  }\n};\n\nreturn item;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1020,
        40
      ],
      "id": "464971c3-6c2f-43b7-8071-09b3374546a4",
      "name": "Convert To Mongo Data"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "93e7c0f6-ef26-4199-9a75-c111cd00b4fd",
              "name": "page",
              "value": "={{ $json.page ? $json.page + 1 : $('Pagination Initialisation').item.json.page + 1 }}",
              "type": "number"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -540,
        -200
      ],
      "id": "c0b435ad-b20a-4feb-a0ec-5ad834653e3f",
      "name": "Pagination Incrementation"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "93e7c0f6-ef26-4199-9a75-c111cd00b4fd",
              "name": "page",
              "value": "={{ $json.page ? $json.page : 1 }}",
              "type": "number"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3120,
        40
      ],
      "id": "cdc6918f-fd5c-4d8c-bb51-2a9bbdbb1f8b",
      "name": "Pagination Initialisation"
    },
    {
      "parameters": {
        "path": "AIScraper",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -5380,
        60
      ],
      "id": "0fc66373-7f19-4d6c-88c0-006b48e39831",
      "name": "Start Webhook",
      "webhookId": "c3905bc0-5807-433c-9aae-c77ab59b363f"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"urls\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"format\": \"uri\"\n      }\n    },\n    \"clinical_trials\": {\n      \"type\": \"array\",\n      \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"originalSourceId\": {\n              \"type\": \"string\"\n            },\n            \"trialSourceUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri\"\n            },\n            \"title\": {\n              \"type\": \"string\"\n            },\n            \"currentEnrollmentCount\": {\n              \"type\": \"integer\"\n            },\n            \"organization\": {\n              \"type\": \"string\"\n            },\n            \"summary\": {\n              \"type\": \"string\"\n            },\n            \"status\": {\n              \"type\": \"string\",\n              \"enum\": [\"COMPLETED\", \"TERMINATED\", \"RECRUITING\", \"NOT_YET_RECRUITING\", \"WITHDRAWN\", \"SUSPENDED\", \"UNKNOWN\", \"ACTIVE_NOT_RECRUITING\", \"ENROLLING_BY_INVITATION\", \"APPROVED_FOR_MARKETING\", \"NO_LONGER_AVAILABLE\", \"TEMPORARILY_NOT_AVAILABLE\"]\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\"INTERVENTIONAL\", \"OBSERVATIONAL\", \"EXPANDED_ACCESS\"]\n            },\n            \"phase\": {\n              \"type\": \"string\",\n              \"enum\": [\"EARLY_PHASE1\", \"PHASE1\", \"PHASE2\", \"PHASE3\", \"PHASE4\", \"NA\"]\n            },\n            \"dates\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"startDate\": {\n                  \"type\": \"string\",\n                  \"format\": \"date\"\n                },\n                \"estimatedCompletionDate\": {\n                  \"type\": \"string\",\n                  \"format\": \"date\"\n                }\n              }\n            },\n            \"conditions\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\":{\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"interventions\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\"DRUG\", \"BEHAVIORAL\", \"DEVICE\", \"BIOLOGICAL\", \"OTHER\", \"COMBINATION_PRODUCT\", \"PROCEDURE\", \"RADIATION\", \"DIETARY_SUPPLEMENT\", \"DIAGNOSTIC_TEST\", \"GENETIC\"]\n                  }\n                }\n              }\n            },\n            \"eligibility\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"gender\": {\n                  \"type\": \"string\",\n                  \"enum\": [\"ALL\", \"MALE\", \"FEMALE\"]\n                },\n                \"minAge\": {\n                  \"type\": [\"integer\", \"null\"]\n                },\n                \"maxAge\": {\n                  \"type\": [\"integer\", \"null\"]\n                },\n                \"eligibilityCriteria\": {\n                  \"type\": \"string\",\n                  \"description\": \"Description complete avec les titres des egibilit√© √©galement avec les saut √† la ligne\"\n                }\n              }\n            },\n            \"sponsor\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"collaborators\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"contacts\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"format\": \"email\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"phone\": {\n                    \"type\": \"string\"\n                  },\n                  \"isMainContact\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            },\n            \"locations\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"city\": {\n                    \"type\": \"string\"\n                  },\n                  \"country\": {\n                    \"type\": \"string\"\n                  },\n                  \"facility\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": [\"originalSource_id\", \"trialSource_url\", \"title\", \"currentEnrollmentCount\", \"organization\", \"summary\", \"status\", \"type\", \"phase\", \"dates\", \"conditions\", \"interventions\", \"eligibility\", \"sponsor\", \"collaborators\", \"contacts\", \"locations\"]\n      }\n    }\n  },\n  \"required\": [\"urls\"]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -1500,
        420
      ],
      "id": "ad17c451-24f6-4ebd-af4b-10012774eae0",
      "name": "URLS OUTPUT SCHEMA PARSER"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"originalSourceId\": {\n      \"type\": \"string\"\n    },\n    \"trialSourceUrl\": {\n      \"type\": \"string\",\n      \"format\": \"uri\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"currentEnrollmentCount\": {\n      \"type\": \"integer\"\n    },\n    \"organization\": {\n      \"type\": \"string\"\n    },\n    \"summary\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\"COMPLETED\", \"TERMINATED\", \"RECRUITING\", \"NOT_YET_RECRUITING\", \"WITHDRAWN\", \"SUSPENDED\", \"UNKNOWN\", \"ACTIVE_NOT_RECRUITING\", \"ENROLLING_BY_INVITATION\", \"APPROVED_FOR_MARKETING\", \"NO_LONGER_AVAILABLE\", \"TEMPORARILY_NOT_AVAILABLE\"]\n    },\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\"INTERVENTIONAL\", \"OBSERVATIONAL\", \"EXPANDED_ACCESS\"]\n    },\n    \"phase\": {\n      \"type\": \"string\",\n      \"enum\": [\"EARLY_PHASE1\", \"PHASE1\", \"PHASE2\", \"PHASE3\", \"PHASE4\", \"NA\"]\n    },\n    \"dates\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"startDate\": {\n          \"type\": \"string\",\n          \"format\": \"date\"\n        },\n        \"estimatedCompletionDate\": {\n          \"type\": \"string\",\n          \"format\": \"date\"\n        }\n      }\n    },\n    \"conditions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\":{\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"interventions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\"DRUG\", \"BEHAVIORAL\", \"DEVICE\", \"BIOLOGICAL\", \"OTHER\", \"COMBINATION_PRODUCT\", \"PROCEDURE\", \"RADIATION\", \"DIETARY_SUPPLEMENT\", \"DIAGNOSTIC_TEST\", \"GENETIC\"]\n          }\n        }\n      }\n    },\n    \"eligibility\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"gender\": {\n          \"type\": \"string\",\n          \"enum\": [\"ALL\", \"MALE\", \"FEMALE\"]\n        },\n        \"minAge\": {\n          \"type\": [\"integer\", \"null\"]\n        },\n        \"maxAge\": {\n          \"type\": [\"integer\", \"null\"]\n        },\n        \"eligibilityCriteria\": {\n          \"type\": \"string\",\n          \"description\": \"Description complete avec les titres des egibilit√© √©galement avec les saut √† la ligne\"\n        }\n      }\n    },\n    \"sponsor\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"collaborators\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"contacts\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"phone\": {\n            \"type\": \"string\"\n          },\n          \"isMainContact\": {\n            \"type\": \"boolean\"\n          }\n        }\n      }\n    },\n    \"locations\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"city\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\"\n          },\n          \"facility\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": [\"originalSource_id\", \"trialSource_url\", \"title\", \"currentEnrollmentCount\", \"organization\", \"summary\", \"status\", \"type\", \"phase\", \"dates\", \"conditions\", \"interventions\", \"eligibility\", \"sponsor\", \"collaborators\", \"contacts\", \"locations\"]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        900,
        460
      ],
      "id": "7b0393ee-883e-44c5-a120-488992a8a4a3",
      "name": "CLINICAL TRIAL SCHEMA PARSER"
    },
    {
      "parameters": {
        "url": "={{ $('Start Webhook').item.json.query.url }}",
        "options": {
          "response": {
            "response": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4120,
        60
      ],
      "id": "6fd448bb-c8b4-4634-91a2-3ecebef30a37",
      "name": "Test Url Search Page",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": \"400\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Missing required parameter: url\",\n  \"timestamp\": \"{{ $now }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -4300,
        300
      ],
      "id": "e2810fab-ce51-4509-aeb5-b7e71a0f74b6",
      "name": "Need Url Error"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "502828ba-2866-4cac-892f-16a4b114cf51",
              "leftValue": "={{ $('Start Webhook').item.json.query.url}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4300,
        60
      ],
      "id": "a06c9c43-6659-4226-8d57-3c9045620486",
      "name": "Check Url Parameter"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b25c948e-20a2-430e-9085-11c6141b4943",
              "leftValue": "={{ $('Start Webhook').item.json.query.paginationParameter }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3860,
        60
      ],
      "id": "e13f2ec8-2494-4d06-9b80-b36c8a52edcd",
      "name": "If"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": \"400\",\n  \"error\": \"BadRequest\",\n  \"message\": \"Missing required parameter: paginationParameter\",\n  \"timestamp\": \"{{ $now }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -3800,
        300
      ],
      "id": "fb08c82c-c096-45f9-9052-94ab489203b1",
      "name": "Need Pagination Error"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": 404,\n  \"error\": \"Not Found\",\n  \"message\": \"Provided URL not found or returned a 404 response\",\n  \"timestamp\": \"{{ $now }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -4060,
        300
      ],
      "id": "6d5612f7-112d-421b-8eec-5eb1acb53d64",
      "name": "Not Found Url Error"
    },
    {
      "parameters": {
        "content": "## Check Parameters and return statement",
        "height": 660,
        "width": 1520,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4940,
        -120
      ],
      "id": "2854e6f4-cb98-4e1a-a87c-febb63a6ef81",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Scrape Search Page",
        "height": 680,
        "width": 1920,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3240,
        -120
      ],
      "id": "f034e563-cb30-4619-a3cc-51a1493e1d7d",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": 200,\n  \"message\": \"Workflow started successfully\",\n  \"data\": {\n    \"id\": {{ $execution.id }},\n    \"stopUrl\": {\n      \"url\": \"http://localhost:5678/api/v1/executions/{{ $execution.id }}\",\n      \"method\": \"DELETE\"\n    }\n  },\n  \"timestamp\": \"{{$now}}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -3580,
        40
      ],
      "id": "80f7999c-d956-468a-a3e4-eac28f9445da",
      "name": "Successfully execution"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": 500,\n  \"error\": \"Internal Server Error\",\n  \"message\": \"Neo4j connection failed ‚ùå. The database may be offline or unreachable.\",\n  \"service\": \"neo4j\",\n  \"suggestion\": \"Make sure the Neo4j instance is running and the credentials are correct.\",\n  \"timestamp\": \"{{$now}}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -4500,
        300
      ],
      "id": "e9afab52-e90b-4fc4-90ec-92d06ffd3350",
      "name": "Neo4j Not Lauched Error"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e4e9d764-a9e7-41ba-89a8-45136474b6e2",
              "name": "Backend Endpoint",
              "value": "http://localhost:3000",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5140,
        60
      ],
      "id": "c30d91d6-cf0e-4220-ba1b-a1f309dd4be2",
      "name": "Default Parameters"
    },
    {
      "parameters": {
        "content": "## Define Backend Endpoint",
        "height": 340,
        "width": 180,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5180,
        -120
      ],
      "id": "1b850157-82ee-4f07-901e-f1ba04293bc5",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "url": "={{ $('Default Parameters').item.json['Backend Endpoint'] }}/clinical-trials/create-or-update",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4900,
        60
      ],
      "id": "f64729c5-b86c-4b39-ac77-a06dcae48aa4",
      "name": "Test Backend",
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Default Parameters').first().json['Backend Endpoint'] }}/clinical-trials/create-or-update",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.clinical_trial }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1260,
        40
      ],
      "id": "cab08f2a-cb64-4087-aa91-5902cd580603",
      "name": "Insert Clinical Trial"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2f2b6ca0-b6ff-4e8a-884b-12865ca0cfb6",
              "leftValue": "={{ $(\"Test Backend\").item.json.error.code }}",
              "rightValue": "ERR_BAD_RESPONSE",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4500,
        60
      ],
      "id": "566c1bef-e8d4-46dd-b871-2dd1b9971794",
      "name": "Check Neo4j Not Launched"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7ab3d289-55b5-42d7-b3f2-4d53b0b4571e",
              "leftValue": "={{ $(\"Test Backend\").item.json.error.code }}",
              "rightValue": "ECONNREFUSED",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4720,
        60
      ],
      "id": "4ab10583-22b7-48bd-9d12-c6b104247810",
      "name": "Check Backend Not Launched"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": 500,\n  \"error\": \"Internal Server Error\",\n  \"message\": \"Backend connection failed ‚ùå. The backend service is down.\",\n  \"service\": \"backend\",\n  \"suggestion\": \"Make sure the Backend instance is running .\",\n  \"timestamp\": \"{{$now}}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -4700,
        300
      ],
      "id": "b457fcc0-6034-4498-bdc1-1e6f3b60d08b",
      "name": "Backend Not Lauched Error"
    },
    {
      "parameters": {
        "jsCode": "let currentUrl = $('Start Webhook').first().json.query.url;\nconst paramName = $('Start Webhook').first().json.query.paginationParameter\n\nif (currentUrl.includes('?')) {\n  currentUrl += `&${paramName}=`;\n} else {\n  currentUrl += `?${paramName}=`;\n}\n\nreturn {\n  json: {\n    url: currentUrl\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3380,
        40
      ],
      "id": "60c8ce37-2020-4474-af55-b75bb9141887",
      "name": "Url Pagination Formater"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {
          "waitUntil": "networkidle0"
        }
      },
      "type": "n8n-nodes-puppeteer.puppeteer",
      "typeVersion": 1,
      "position": [
        -40,
        40
      ],
      "id": "75d57982-85f3-41ce-9120-60805dcea4ea",
      "name": "Request Trinical Trial Page HTML"
    },
    {
      "parameters": {},
      "name": "Read PDF",
      "type": "n8n-nodes-base.readPDF",
      "position": [
        120,
        260
      ],
      "typeVersion": 1,
      "id": "ac4979a0-f39f-44a5-a060-38ee2935e063"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -60,
        260
      ],
      "id": "b8ec0603-dad6-4f67-92b3-8089c8eee069",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        300,
        260
      ],
      "id": "7248af32-1c49-47f5-9b6c-506c72e24b87",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "54937763-e41c-4c31-b2b5-2b87bef1e972",
              "name": "data",
              "value": "={{ $json.data ? $json.data : $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        460,
        40
      ],
      "id": "613bdefc-a5aa-453d-a876-f4972a074291",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f5891d3f-c6f5-4a9c-8dbf-32c03d12420f",
              "leftValue": "={{ $json.url }}",
              "rightValue": ".pdf",
              "operator": {
                "type": "string",
                "operation": "endsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -300,
        40
      ],
      "id": "80853223-ed24-459e-9966-e4dc58261bd0",
      "name": "Check Pdf"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -540,
        800
      ],
      "id": "c0bda788-dc10-4e1c-8d5f-1d04adfa1103",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "jsCode": "let items = [];\n\nfor (const clinical_trial of $('AI Agent Search Page').first().json.output.clinical_trials) {\n  items.push({\n    json: {\n      clinical_trial: clinical_trial\n    }\n  });\n}\n\nreturn items;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -760,
        800
      ],
      "id": "556aaaad-77c3-40ed-b6f7-9f905d507033",
      "name": "Clinical Trial Info list for loop"
    },
    {
      "parameters": {
        "jsCode": "var item = {\n  clinical_trial: {\n    // Infos d'essai clinique ajout√©es\n    title: $input.first().json.clinical_trial.title,\n    status: $input.first().json.clinical_trial.status,\n    summary: $input.first().json.clinical_trial.summary,\n    currentEnrollmentCount: $input.first().json.clinical_trial.currentEnrollmentCount,\n    type: $input.first().json.clinical_trial.type,\n    phase: $input.first().json.clinical_trial.phase,\n    organization: $input.first().json.clinical_trial.organization,\n    dates: $input.first().json.clinical_trial.dates,\n    conditions: $input.first().json.clinical_trial.conditions,\n    interventions: $input.first().json.clinical_trial.interventions,\n    eligibility: $input.first().json.clinical_trial.eligibility,\n    sponsor: $input.first().json.clinical_trial.sponsor,\n    collaborators: $input.first().json.clinical_trial.collaborators,\n    contacts: $input.first().json.clinical_trial.contacts,\n    locations: $input.first().json.clinical_trial.locations,\n    sourceMetaData: {\n      originalSourceId: $input.first().json.clinical_trial.originalSourceId,\n      trialSourceUrl: $input.first().json.clinical_trial.trialSourceUrl,\n      dataSource: {\n        name: \"ClinicalTrials.gov public API\",\n        type: \"API\",\n        uri: $('Start Webhook').first().json.query.url\n      }\n    }\n  }\n};\n\nreturn item;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -260,
        800
      ],
      "id": "b2e79783-d0b7-404e-9bcc-bd110400a7cc",
      "name": "Convert To Mongo Data1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Default Parameters').item.json['Backend Endpoint'] }}/clinical-trials/create-or-update",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.clinical_trial }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -60,
        800
      ],
      "id": "594f5c4e-560c-4006-bece-caf7daaf7b08",
      "name": "Insert Clinical Trial1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "df50304b-9461-4987-950e-ecb039a83a4e",
              "leftValue": "={{ $('AI Agent Search Page').item.json.output.urls }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -920,
        60
      ],
      "id": "5a50364a-a5ef-4500-8259-f8d32b8514b1",
      "name": "Check Urls"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "af941aaa-4775-418d-993f-3512dafb493f",
              "leftValue": "={{ $('AI Agent Search Page').item.json.output.clinical_trials }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -940,
        800
      ],
      "id": "f7940c5d-025a-44aa-a511-8e00085a81da",
      "name": "Check Clinical Trials"
    },
    {
      "parameters": {
        "content": "## Insert no URL Clinical Trials",
        "height": 420,
        "width": 500,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -360,
        660
      ],
      "id": "9033204a-c805-4c6a-8ede-eebfac586515",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "65628810-5e3f-4110-8426-f7ca4d17142d",
              "leftValue": "={{ $('AI Agent Search Page').item.json.output.urls }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "8cd302f6-46c6-4e97-85cb-efc2a138f68f",
              "leftValue": "={{ $('AI Agent Search Page').item.json.output.clinical_trials }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1220,
        40
      ],
      "id": "f22b4eb5-275b-47d2-89d6-bc14d9fe1e61",
      "name": "Check Infos"
    }
  ],
  "pinData": {},
  "connections": {
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Pagination Incrementation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Pdf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mistral Cloud Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Search Page",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Auto-fixing Output Parser1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Mistral Cloud Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Scrape Page",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Search Page": {
      "main": [
        [
          {
            "node": "Check Infos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Scrape Page": {
      "main": [
        [
          {
            "node": "Convert To Mongo Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent Scrape Page",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent Search Page",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Search Page Request": {
      "main": [
        [
          {
            "node": "Get Search Page Body",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Page To Markdown": {
      "main": [
        [
          {
            "node": "AI Agent Search Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Search Page Body": {
      "main": [
        [
          {
            "node": "Search Page To Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Urls list for loop": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Clinical Trial Page Body": {
      "main": [
        [
          {
            "node": "Clinical Trial Page To Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clinical Trial Page To Markdown": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert To Mongo Data": {
      "main": [
        [
          {
            "node": "Insert Clinical Trial",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pagination Incrementation": {
      "main": [
        [
          {
            "node": "Pagination Initialisation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pagination Initialisation": {
      "main": [
        [
          {
            "node": "Search Page Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start Webhook": {
      "main": [
        [
          {
            "node": "Default Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "URLS OUTPUT SCHEMA PARSER": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "CLINICAL TRIAL SCHEMA PARSER": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Test Url Search Page": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Not Found Url Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Url Parameter": {
      "main": [
        [
          {
            "node": "Test Url Search Page",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Need Url Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Successfully execution",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Need Pagination Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Successfully execution": {
      "main": [
        [
          {
            "node": "Url Pagination Formater",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Parameters": {
      "main": [
        [
          {
            "node": "Test Backend",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test Backend": {
      "main": [
        [
          {
            "node": "Check Backend Not Launched",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Clinical Trial": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Neo4j Not Launched": {
      "main": [
        [
          {
            "node": "Neo4j Not Lauched Error",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Url Parameter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Backend Not Launched": {
      "main": [
        [
          {
            "node": "Backend Not Lauched Error",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Neo4j Not Launched",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Url Pagination Formater": {
      "main": [
        [
          {
            "node": "Pagination Initialisation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request Trinical Trial Page HTML": {
      "main": [
        [
          {
            "node": "Get Clinical Trial Page Body",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Read PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PDF": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent Scrape Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Pdf": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Request Trinical Trial Page HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clinical Trial Info list for loop": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Check Urls",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert To Mongo Data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert To Mongo Data1": {
      "main": [
        [
          {
            "node": "Insert Clinical Trial1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Clinical Trial1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Urls": {
      "main": [
        [
          {
            "node": "Urls list for loop",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pagination Incrementation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Clinical Trials": {
      "main": [
        [
          {
            "node": "Clinical Trial Info list for loop",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Urls",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Infos": {
      "main": [
        [
          {
            "node": "Check Clinical Trials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "cab5cfed-9cec-43cb-a487-7da5fa86244d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "14f4d3df5fed8f2097384600eccf148a77385e6a062fb86bbfa855b5102bd332"
  },
  "id": "xlhtqPZO7mesIHQG",
  "tags": []
}