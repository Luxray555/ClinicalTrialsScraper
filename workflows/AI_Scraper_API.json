{
  "name": "AI Scraper API",
  "nodes": [
    {
      "parameters": {
        "content": "## Scrape Clinical Trial by URL",
        "height": 600,
        "width": 2220
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        20,
        300
      ],
      "id": "45425fac-8126-4781-8196-ed0541260ac0",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "batchSize": "={{ $('AI Agent Search Page').first().json.output.urls.length }}",
        "options": {
          "reset": true
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -180,
        460
      ],
      "id": "0dfad2be-7a82-4872-85b0-f708f4dbe8f6",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Tu es un expert en extraction d’informations depuis du HTML (web scraping).\nTon rôle est d’analyser une page de recherche d’essais cliniques et de me renvoyer :\n\nLes URLs complètes des essais cliniques listés dans la page (s'ils sont présents) dans le champ urls.\n\nLes informations complètes des essais cliniques qui n'ont pas d'URL de redirection dans leurs page de détail, tu ajoutera leurs informations dans le champ clinical_trials.\nIl ne faut surtout pas que un essai clinique ayant un url de redirection de detail soit également mit dans clinical_trials.\n\nRègles strictes à respecter :\n\nTu ne dois jamais inventer ou deviner d’URL.\n\nSi aucun essai clinique n’est présent (page vide ou fin de pagination), renvoie un objet contenant deux listes vides.\n\nPour les liens relatifs, utilise l’URL source de la page pour les transformer en liens absolus.\n\nTu dois renvoyer le résultat strictement au format JSON SCHEMA suivant :\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"urls\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"format\": \"uri\"\n      }\n    },\n    \"clinical_trials\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"originalSourceId\": {\n            \"type\": \"string\"\n          },\n          \"trialSourceUrl\": {\n            \"type\": \"string\",\n            \"format\": \"uri\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"currentEnrollmentCount\": {\n            \"type\": \"integer\"\n          },\n          \"organization\": {\n            \"type\": \"string\"\n          },\n          \"summary\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\"COMPLETED\", \"TERMINATED\", \"RECRUITING\", \"NOT_YET_RECRUITING\", \"WITHDRAWN\", \"SUSPENDED\", \"UNKNOWN\", \"ACTIVE_NOT_RECRUITING\", \"ENROLLING_BY_INVITATION\", \"APPROVED_FOR_MARKETING\", \"NO_LONGER_AVAILABLE\", \"TEMPORARILY_NOT_AVAILABLE\"]\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\"INTERVENTIONAL\", \"OBSERVATIONAL\", \"EXPANDED_ACCESS\"]\n          },\n          \"phase\": {\n            \"type\": \"string\",\n            \"enum\": [\"EARLY_PHASE1\", \"PHASE1\", \"PHASE2\", \"PHASE3\", \"PHASE4\", \"NA\"]\n          },\n          \"dates\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"startDate\": {\n                \"type\": \"string\",\n                \"format\": \"date\"\n              },\n              \"estimatedCompletionDate\": {\n                \"type\": \"string\",\n                \"format\": \"date\"\n              }\n            }\n          },\n          \"conditions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\":{\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"interventions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"description\": {\n                  \"type\": \"string\"\n                },\n                \"type\": {\n                  \"type\": \"string\",\n                  \"enum\": [\"DRUG\", \"BEHAVIORAL\", \"DEVICE\", \"BIOLOGICAL\", \"OTHER\", \"COMBINATION_PRODUCT\", \"PROCEDURE\", \"RADIATION\", \"DIETARY_SUPPLEMENT\", \"DIAGNOSTIC_TEST\", \"GENETIC\"]\n                }\n              }\n            }\n          },\n          \"eligibility\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"gender\": {\n                \"type\": \"string\",\n                \"enum\": [\"ALL\", \"MALE\", \"FEMALE\"]\n              },\n              \"minAge\": {\n                \"type\": [\"integer\", \"null\"]\n              },\n              \"maxAge\": {\n                \"type\": [\"integer\", \"null\"]\n              },\n              \"eligibilityCriteria\": {\n                \"type\": \"string\",\n                \"description\": \"Description complete avec les titres des egibilité également avec les saut à la ligne\"\n              }\n            }\n          },\n          \"sponsor\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"collaborators\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"contacts\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"email\": {\n                  \"type\": \"string\",\n                  \"format\": \"email\"\n                },\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"phone\": {\n                  \"type\": \"string\"\n                },\n                \"isMainContact\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          },\n          \"locations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"city\": {\n                  \"type\": \"string\"\n                },\n                \"country\": {\n                  \"type\": \"string\"\n                },\n                \"facility\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"required\": [\"originalSource_id\", \"trialSource_url\", \"title\", \"currentEnrollmentCount\", \"organization\", \"summary\", \"status\", \"type\", \"phase\", \"dates\", \"conditions\", \"interventions\", \"eligibility\", \"sponsor\", \"collaborators\", \"contacts\", \"locations\"]\n      }\n    }\n  },\n  \"required\": [\"urls\"]\n}\n\nTu dois automatiquement trier chaque essai clinique dans le bon champ :\nSi l’essai possède une URL directe (ex. fichier PDF ou page de détail), place-le dans \"urls\".\n\nSinon, extrais toutes les données disponibles et place-le dans \"clinical_trials\".\n\nLa sortie doit être strictement un objet JSON brut, sans préfixe, balise Markdown, commentaire ni texte. Aucune explication, uniquement le JSON final.\n\nVoici l'url de la page de recherche:\n{{ $('Search Page Request').first().json.url }}\nVoici la page HTML au format MARKDOWN:\n{{ $('Search Page To Markdown').item.json.data }}",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -1540,
        440
      ],
      "id": "d445b905-2af4-4b78-b3cc-1ac2ff92845d",
      "name": "AI Agent Search Page",
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Tu es un expert en analyse HTML et en extraction d'informations web (web scraping). Ton rôle est d'examiner une page d'essaie clinique et d'identifier les données nécessaires requis dans le format JSON attendu ci dessous. Tu dois répondre uniquement en JSON structuré, sans commentaire.\n\nFormat JSON SCHEMA attendu :\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"originalSourceId\": {\n      \"type\": \"string\"\n    },\n    \"trialSourceUrl\": {\n      \"type\": \"string\",\n      \"format\": \"uri\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"currentEnrollmentCount\": {\n      \"type\": \"integer\"\n    },\n    \"organization\": {\n      \"type\": \"string\"\n    },\n    \"summary\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\"COMPLETED\", \"TERMINATED\", \"RECRUITING\", \"NOT_YET_RECRUITING\", \"WITHDRAWN\", \"SUSPENDED\", \"UNKNOWN\", \"ACTIVE_NOT_RECRUITING\", \"ENROLLING_BY_INVITATION\", \"APPROVED_FOR_MARKETING\", \"NO_LONGER_AVAILABLE\", \"TEMPORARILY_NOT_AVAILABLE\"]\n    },\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\"INTERVENTIONAL\", \"OBSERVATIONAL\", \"EXPANDED_ACCESS\"]\n    },\n    \"phase\": {\n      \"type\": \"string\",\n      \"enum\": [\"EARLY_PHASE1\", \"PHASE1\", \"PHASE2\", \"PHASE3\", \"PHASE4\", \"NA\"]\n    },\n    \"dates\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"startDate\": {\n          \"type\": \"string\",\n          \"format\": \"date\"\n        },\n        \"estimatedCompletionDate\": {\n          \"type\": \"string\",\n          \"format\": \"date\"\n        }\n      }\n    },\n    \"conditions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\":{\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"interventions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\"DRUG\", \"BEHAVIORAL\", \"DEVICE\", \"BIOLOGICAL\", \"OTHER\", \"COMBINATION_PRODUCT\", \"PROCEDURE\", \"RADIATION\", \"DIETARY_SUPPLEMENT\", \"DIAGNOSTIC_TEST\", \"GENETIC\"]\n          }\n        }\n      }\n    },\n    \"eligibility\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"gender\": {\n          \"type\": \"string\",\n          \"enum\": [\"ALL\", \"MALE\", \"FEMALE\"]\n        },\n        \"minAge\": {\n          \"type\": [\"integer\", \"null\"]\n        },\n        \"maxAge\": {\n          \"type\": [\"integer\", \"null\"]\n        },\n        \"eligibilityCriteria\": {\n          \"type\": \"string\",\n          \"description\": \"Description complete avec les titres des egibilité également avec les saut à la ligne\"\n        }\n      }\n    },\n    \"sponsor\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"collaborators\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"contacts\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"phone\": {\n            \"type\": \"string\"\n          },\n          \"isMainContact\": {\n            \"type\": \"boolean\"\n          }\n        }\n      }\n    },\n    \"locations\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"city\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\"\n          },\n          \"facility\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": [\"originalSource_id\", \"trialSource_url\", \"title\", \"currentEnrollmentCount\", \"organization\", \"summary\", \"status\", \"type\", \"phase\", \"dates\", \"conditions\", \"interventions\", \"eligibility\", \"sponsor\", \"collaborators\", \"contacts\", \"locations\"]\n}\n\nVoici la page HTML au format MARKDOWN:\n{{ $json.data }}",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1260,
        440
      ],
      "id": "bed2db3c-06d9-4683-a314-2dc4c3765b0c",
      "name": "AI Agent Scrape Page",
      "alwaysOutputData": false,
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "url": "={{ $('Url Pagination Formater').first().json.url }}{{ $json.page }}",
        "options": {
          "waitUntil": "networkidle0"
        }
      },
      "type": "n8n-nodes-puppeteer.puppeteer",
      "typeVersion": 1,
      "position": [
        -2500,
        440
      ],
      "id": "d1363e48-cfeb-49a6-919a-896c86bcac0a",
      "name": "Search Page Request"
    },
    {
      "parameters": {
        "html": "={{ $json.body }}",
        "options": {
          "useLinkReferenceDefinitions": true
        }
      },
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        -1700,
        440
      ],
      "id": "d4d8a4eb-a4ef-462c-ad83-81d9aeb0955a",
      "name": "Search Page To Markdown"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "dataPropertyName": "=body",
        "extractionValues": {
          "values": [
            {
              "key": "body",
              "cssSelector": "body",
              "returnValue": "html"
            }
          ]
        },
        "options": {
          "trimValues": true,
          "cleanUpText": true
        }
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -2200,
        440
      ],
      "id": "d083a28e-5f3f-4d30-a4de-465ba54f506b",
      "name": "Get Search Page Body"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "dataPropertyName": "=body",
        "extractionValues": {
          "values": [
            {
              "key": "body",
              "cssSelector": "body",
              "returnValue": "html"
            }
          ]
        },
        "options": {
          "trimValues": true,
          "cleanUpText": true
        }
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        480,
        440
      ],
      "id": "d3464731-8de9-4847-b035-810b63332770",
      "name": "Get Clinical Trial Page Body"
    },
    {
      "parameters": {
        "html": "={{ $json.body }}",
        "options": {}
      },
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        840,
        440
      ],
      "id": "6d3bca61-dd04-4e9b-9ded-1b5bd2927627",
      "name": "Clinical Trial Page To Markdown"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "93e7c0f6-ef26-4199-9a75-c111cd00b4fd",
              "name": "page",
              "value": "={{ $json.page ? $json.page : 1 }}",
              "type": "number"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2740,
        440
      ],
      "id": "f12412ce-dd5e-4134-b75b-6de6fa5f015c",
      "name": "Pagination Initialisation"
    },
    {
      "parameters": {
        "path": "AIScraper",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -5000,
        460
      ],
      "id": "3031402a-9677-40e7-bbac-3ce292316497",
      "name": "Start Webhook",
      "webhookId": "c3905bc0-5807-433c-9aae-c77ab59b363f"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"urls\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"clinical_trials\": {\n      \"type\": \"array\",\n      \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"originalSourceId\": {\n              \"type\": \"string\"\n            },\n            \"trialSourceUrl\": {\n              \"type\": \"string\"\n            },\n            \"title\": {\n              \"type\": \"string\"\n            },\n            \"currentEnrollmentCount\": {\n              \"type\": \"integer\"\n            },\n            \"organization\": {\n              \"type\": \"string\"\n            },\n            \"summary\": {\n              \"type\": \"string\"\n            },\n            \"status\": {\n              \"type\": \"string\",\n              \"enum\": [\"COMPLETED\", \"TERMINATED\", \"RECRUITING\", \"NOT_YET_RECRUITING\", \"WITHDRAWN\", \"SUSPENDED\", \"UNKNOWN\", \"ACTIVE_NOT_RECRUITING\", \"ENROLLING_BY_INVITATION\", \"APPROVED_FOR_MARKETING\", \"NO_LONGER_AVAILABLE\", \"TEMPORARILY_NOT_AVAILABLE\"]\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\"INTERVENTIONAL\", \"OBSERVATIONAL\", \"EXPANDED_ACCESS\"]\n            },\n            \"phase\": {\n              \"type\": \"string\",\n              \"enum\": [\"EARLY_PHASE1\", \"PHASE1\", \"PHASE2\", \"PHASE3\", \"PHASE4\", \"NA\"]\n            },\n            \"dates\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"startDate\": {\n                  \"type\": \"string\"\n                },\n                \"estimatedCompletionDate\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"conditions\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\":{\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"interventions\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\"DRUG\", \"BEHAVIORAL\", \"DEVICE\", \"BIOLOGICAL\", \"OTHER\", \"COMBINATION_PRODUCT\", \"PROCEDURE\", \"RADIATION\", \"DIETARY_SUPPLEMENT\", \"DIAGNOSTIC_TEST\", \"GENETIC\"]\n                  }\n                }\n              }\n            },\n            \"eligibility\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"gender\": {\n                  \"type\": \"string\",\n                  \"enum\": [\"ALL\", \"MALE\", \"FEMALE\"]\n                },\n                \"minAge\": {\n                  \"type\": [\"integer\", \"null\"]\n                },\n                \"maxAge\": {\n                  \"type\": [\"integer\", \"null\"]\n                },\n                \"eligibilityCriteria\": {\n                  \"type\": \"string\",\n                  \"description\": \"Description complete avec les titres des egibilité également avec les saut à la ligne\"\n                }\n              }\n            },\n            \"sponsor\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"collaborators\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"contacts\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"phone\": {\n                    \"type\": \"string\"\n                  },\n                  \"isMainContact\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            },\n            \"locations\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"city\": {\n                    \"type\": \"string\"\n                  },\n                  \"country\": {\n                    \"type\": \"string\"\n                  },\n                  \"facility\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": [\"originalSource_id\", \"trialSource_url\", \"title\", \"currentEnrollmentCount\", \"organization\", \"summary\", \"status\", \"type\", \"phase\", \"dates\", \"conditions\", \"interventions\", \"eligibility\", \"sponsor\", \"collaborators\", \"contacts\", \"locations\"]\n      }\n    }\n  },\n  \"required\": [\"urls\"]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -1360,
        700
      ],
      "id": "51a34225-d782-4158-b2fc-1acb4d66bdb4",
      "name": "URLS OUTPUT SCHEMA PARSER"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"originalSourceId\": {\n      \"type\": \"string\"\n    },\n    \"trialSourceUrl\": {\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"currentEnrollmentCount\": {\n      \"type\": \"integer\"\n    },\n    \"organization\": {\n      \"type\": \"string\"\n    },\n    \"summary\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\"COMPLETED\", \"TERMINATED\", \"RECRUITING\", \"NOT_YET_RECRUITING\", \"WITHDRAWN\", \"SUSPENDED\", \"UNKNOWN\", \"ACTIVE_NOT_RECRUITING\", \"ENROLLING_BY_INVITATION\", \"APPROVED_FOR_MARKETING\", \"NO_LONGER_AVAILABLE\", \"TEMPORARILY_NOT_AVAILABLE\"]\n    },\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\"INTERVENTIONAL\", \"OBSERVATIONAL\", \"EXPANDED_ACCESS\"]\n    },\n    \"phase\": {\n      \"type\": \"string\",\n      \"enum\": [\"EARLY_PHASE1\", \"PHASE1\", \"PHASE2\", \"PHASE3\", \"PHASE4\", \"NA\"]\n    },\n    \"dates\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"startDate\": {\n          \"type\": \"string\"\n        },\n        \"estimatedCompletionDate\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"conditions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\":{\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"interventions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\"DRUG\", \"BEHAVIORAL\", \"DEVICE\", \"BIOLOGICAL\", \"OTHER\", \"COMBINATION_PRODUCT\", \"PROCEDURE\", \"RADIATION\", \"DIETARY_SUPPLEMENT\", \"DIAGNOSTIC_TEST\", \"GENETIC\"]\n          }\n        }\n      }\n    },\n    \"eligibility\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"gender\": {\n          \"type\": \"string\",\n          \"enum\": [\"ALL\", \"MALE\", \"FEMALE\"]\n        },\n        \"minAge\": {\n          \"type\": [\"integer\", \"null\"]\n        },\n        \"maxAge\": {\n          \"type\": [\"integer\", \"null\"]\n        },\n        \"eligibilityCriteria\": {\n          \"type\": \"string\",\n          \"description\": \"Description complete avec les titres des egibilité également avec les saut à la ligne\"\n        }\n      }\n    },\n    \"sponsor\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"collaborators\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"contacts\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"phone\": {\n            \"type\": \"string\"\n          },\n          \"isMainContact\": {\n            \"type\": \"boolean\"\n          }\n        }\n      }\n    },\n    \"locations\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"city\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\"\n          },\n          \"facility\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": [\"originalSource_id\", \"trialSource_url\", \"title\", \"currentEnrollmentCount\", \"organization\", \"summary\", \"status\", \"type\", \"phase\", \"dates\", \"conditions\", \"interventions\", \"eligibility\", \"sponsor\", \"collaborators\", \"contacts\", \"locations\"]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1480,
        720
      ],
      "id": "5fc353ad-7080-428d-b5a9-3442e193bd9c",
      "name": "CLINICAL TRIAL SCHEMA PARSER"
    },
    {
      "parameters": {
        "url": "={{ $('Start Webhook').item.json.query.url }}",
        "options": {
          "response": {
            "response": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3740,
        460
      ],
      "id": "2f0c1ac8-50c5-4ec4-8d72-e2a8e2e82b9d",
      "name": "Test Url Search Page",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": \"400\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Missing required parameter: url\",\n  \"timestamp\": \"{{ $now }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -3920,
        700
      ],
      "id": "96336706-bbd6-4431-9cf3-c572a13b59df",
      "name": "Need Url Error"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "502828ba-2866-4cac-892f-16a4b114cf51",
              "leftValue": "={{ $('Start Webhook').item.json.query.url}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3920,
        460
      ],
      "id": "f839e906-2ec4-47bf-abe1-ee1c8d71f146",
      "name": "Check Url Parameter"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b25c948e-20a2-430e-9085-11c6141b4943",
              "leftValue": "={{ $('Start Webhook').item.json.query.paginationParameter }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3480,
        460
      ],
      "id": "1cdfb4f6-30cc-4047-bd6b-6ca1af3a0e6b",
      "name": "If"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": \"400\",\n  \"error\": \"BadRequest\",\n  \"message\": \"Missing required parameter: paginationParameter\",\n  \"timestamp\": \"{{ $now }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -3420,
        700
      ],
      "id": "620a2a3d-4caa-48ac-a377-16dfe1bea52f",
      "name": "Need Pagination Error"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": 404,\n  \"error\": \"Not Found\",\n  \"message\": \"Provided URL not found or returned a 404 response\",\n  \"timestamp\": \"{{ $now }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -3680,
        700
      ],
      "id": "80afcbca-66bc-4249-acc3-9806eae8e483",
      "name": "Not Found Url Error"
    },
    {
      "parameters": {
        "content": "## Check Parameters and return statement",
        "height": 660,
        "width": 1520,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4560,
        300
      ],
      "id": "765484e2-5776-497b-9a84-567d5ca0bfdc",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Scrape Search Page",
        "height": 580,
        "width": 1860,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2860,
        300
      ],
      "id": "2ca5e482-f580-487a-9d14-30e14ee4c9e8",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": 200,\n  \"message\": \"Workflow started successfully\",\n  \"data\": {\n    \"id\": {{ $execution.id }},\n    \"stopUrl\": {\n      \"url\": \"http://localhost:5678/api/v1/executions/{{ $execution.id }}\",\n      \"method\": \"DELETE\"\n    }\n  },\n  \"timestamp\": \"{{$now}}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -3200,
        440
      ],
      "id": "f259137d-702d-4b43-a36d-addcb4419984",
      "name": "Successfully execution"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": 500,\n  \"error\": \"Internal Server Error\",\n  \"message\": \"Neo4j connection failed ❌. The database may be offline or unreachable.\",\n  \"service\": \"neo4j\",\n  \"suggestion\": \"Make sure the Neo4j instance is running and the credentials are correct.\",\n  \"timestamp\": \"{{$now}}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -4120,
        700
      ],
      "id": "71ea0519-8d0d-4fa5-8a65-6057e2c7f674",
      "name": "Neo4j Not Lauched Error"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e4e9d764-a9e7-41ba-89a8-45136474b6e2",
              "name": "Backend Endpoint",
              "value": "http://localhost:3000",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4760,
        460
      ],
      "id": "99662f6e-7114-4f3a-af0f-eecd042dc73f",
      "name": "Default Parameters"
    },
    {
      "parameters": {
        "content": "## Define Backend Endpoint",
        "height": 340,
        "width": 180,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4800,
        300
      ],
      "id": "e606f9cb-66e9-4839-a662-e9c34120156a",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "url": "={{ $('Default Parameters').item.json['Backend Endpoint'] }}/clinical-trials/create-or-update",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4520,
        460
      ],
      "id": "df239c3b-67df-49a1-9f50-9a8e26b0e59d",
      "name": "Test Backend",
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Default Parameters').first().json['Backend Endpoint'] }}/clinical-trials/create-or-update",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.clinical_trial }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2060,
        440
      ],
      "id": "3a662c9b-cf0e-47ce-8434-76337a669828",
      "name": "Insert Clinical Trial"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2f2b6ca0-b6ff-4e8a-884b-12865ca0cfb6",
              "leftValue": "={{ $(\"Test Backend\").item.json.error.code }}",
              "rightValue": "ERR_BAD_RESPONSE",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4120,
        460
      ],
      "id": "eefb8d87-4880-4dd6-b8f2-42a1cae77f7b",
      "name": "Check Neo4j Not Launched"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7ab3d289-55b5-42d7-b3f2-4d53b0b4571e",
              "leftValue": "={{ $(\"Test Backend\").item.json.error.code }}",
              "rightValue": "ECONNREFUSED",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4340,
        460
      ],
      "id": "61af8738-68cf-49bc-8af8-f2bdcd333afd",
      "name": "Check Backend Not Launched"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": 500,\n  \"error\": \"Internal Server Error\",\n  \"message\": \"Backend connection failed ❌. The backend service is down.\",\n  \"service\": \"backend\",\n  \"suggestion\": \"Make sure the Backend instance is running .\",\n  \"timestamp\": \"{{$now}}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -4320,
        700
      ],
      "id": "142b340f-710e-4879-80d3-c00c3149dfb5",
      "name": "Backend Not Lauched Error"
    },
    {
      "parameters": {
        "jsCode": "let currentUrl = $('Start Webhook').first().json.query.url;\nconst paramName = $('Start Webhook').first().json.query.paginationParameter\n\nif (currentUrl.includes('?')) {\n  currentUrl += `&${paramName}=`;\n} else {\n  currentUrl += `?${paramName}=`;\n}\n\nreturn {\n  json: {\n    url: currentUrl\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3000,
        440
      ],
      "id": "6bcb502f-bea8-4377-8b40-0bdd474c7544",
      "name": "Url Pagination Formater"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {
          "waitUntil": "networkidle0"
        }
      },
      "type": "n8n-nodes-puppeteer.puppeteer",
      "typeVersion": 1,
      "position": [
        320,
        440
      ],
      "id": "8cc603cb-5cd1-4406-8217-a3219cdc2d58",
      "name": "Request Trinical Trial Page HTML"
    },
    {
      "parameters": {},
      "name": "Read PDF",
      "type": "n8n-nodes-base.readPDF",
      "position": [
        460,
        660
      ],
      "typeVersion": 1,
      "id": "7dae7427-12b1-4381-9d6f-aea70d78de9e"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        300,
        660
      ],
      "id": "8875a84c-46d0-4b25-a62f-1d670ab30801",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        640,
        660
      ],
      "id": "417a15e2-55f7-46ed-9f93-73003ca0d100",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "54937763-e41c-4c31-b2b5-2b87bef1e972",
              "name": "data",
              "value": "={{ $json.data ? $json.data : $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1060,
        440
      ],
      "id": "807bdfc4-0fd5-4195-94b4-be9f83047a06",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f5891d3f-c6f5-4a9c-8dbf-32c03d12420f",
              "leftValue": "={{ $json.url }}",
              "rightValue": ".pdf",
              "operator": {
                "type": "string",
                "operation": "endsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        60,
        440
      ],
      "id": "7ab4c18d-a6af-436f-aaaa-3063f2f93ed5",
      "name": "Check Pdf"
    },
    {
      "parameters": {
        "batchSize": "={{ $('AI Agent Search Page').first().json.output.clinical_trials.length }}",
        "options": {
          "reset": true
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -180,
        1100
      ],
      "id": "fa0d536b-4afd-44be-87b9-8aae21c022c3",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "jsCode": "let items = [];\n\nfor (const clinical_trial of $('AI Agent Search Page').first().json.output.clinical_trials) {\n  items.push({\n    json: {\n      clinical_trial: clinical_trial\n    }\n  });\n}\n\nreturn items;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        1100
      ],
      "id": "2101927e-601e-4396-9ccf-f81764bf7557",
      "name": "Clinical Trial Info list for loop"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Default Parameters').item.json['Backend Endpoint'] }}/clinical-trials/create-or-update",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.clinical_trial }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        300,
        1100
      ],
      "id": "4931f09f-d3a8-438b-b67b-3fb10b3a5cb4",
      "name": "Insert Clinical Trial1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "df50304b-9461-4987-950e-ecb039a83a4e",
              "leftValue": "={{ $('AI Agent Search Page').item.json.output.urls }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -560,
        460
      ],
      "id": "cf5cb6da-e632-4778-91a6-d4e30716161c",
      "name": "Check Urls"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "af941aaa-4775-418d-993f-3512dafb493f",
              "leftValue": "={{ $('AI Agent Search Page').item.json.output.clinical_trials }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -580,
        1100
      ],
      "id": "530d29cb-b26a-4569-8732-99ff3b68b11b",
      "name": "Check Clinical Trials"
    },
    {
      "parameters": {
        "content": "## Insert no URL Clinical Trials",
        "height": 420,
        "width": 500,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        20,
        940
      ],
      "id": "26ceddfc-dee2-45bd-acb5-03f1a43e6d5d",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "65628810-5e3f-4110-8426-f7ca4d17142d",
              "leftValue": "={{ $('AI Agent Search Page').item.json.output.urls }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "8cd302f6-46c6-4e97-85cb-efc2a138f68f",
              "leftValue": "={{ $('AI Agent Search Page').item.json.output.clinical_trials }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -940,
        440
      ],
      "id": "a86fe376-70ff-48d2-ae9a-2f0fdb191339",
      "name": "Check Infos"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const html = $json.body;\n\nconst cleanedHtml = html\n  .replace(/<header[\\s\\S]*?<\\/header>/gi, '')\n  .replace(/<footer[\\s\\S]*?<\\/footer>/gi, '')\n  .replace(/<script[\\s\\S]*?<\\/script>/gi, '')\n  .replace(/<style[\\s\\S]*?<\\/style>/gi, '')\n  .replace(/<nav[\\s\\S]*?<\\/nav>/gi, '')\n  .replace(/<svg[\\s\\S]*?<\\/svg>/gi, '')\n  .replace(/<noscript[\\s\\S]*?<\\/noscript>/gi, '')\n  .replace(/<link[\\s\\S]*?<\\/link>/gi, '')\n  .replace(/<meta[\\s\\S]*?<\\/meta>/gi, '')\n  .replace(/<aside[\\s\\S]*?<\\/aside>/gi, '')\n  .replace(/<iframe[\\s\\S]*?<\\/iframe>/gi, '')\n  .replace(/<canvas[\\s\\S]*?<\\/canvas>/gi, '')\n  .replace(/<figure[\\s\\S]*?<\\/figure>/gi, '')\n  .replace(/<img\\b[^>]*>/gi, '');\n\nreturn {\n    json: {\n      body: cleanedHtml\n    }\n  };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        660,
        440
      ],
      "id": "b746bdd1-d7eb-4238-bbe6-91d0ba9b0924",
      "name": "HTML CLEAN Clinical Page"
    },
    {
      "parameters": {
        "jsCode": "const html = $input.first().json.body;\n\nconst cleanedHtml = html\n  .replace(/<header[\\s\\S]*?<\\/header>/gi, '')\n  .replace(/<footer[\\s\\S]*?<\\/footer>/gi, '')\n  .replace(/<script[\\s\\S]*?<\\/script>/gi, '')\n  .replace(/<style[\\s\\S]*?<\\/style>/gi, '')\n  .replace(/<nav[\\s\\S]*?<\\/nav>/gi, '')\n  .replace(/<svg[\\s\\S]*?<\\/svg>/gi, '')\n  .replace(/<noscript[\\s\\S]*?<\\/noscript>/gi, '')\n  .replace(/<link[\\s\\S]*?<\\/link>/gi, '')\n  .replace(/<meta[\\s\\S]*?<\\/meta>/gi, '')\n  .replace(/<aside[\\s\\S]*?<\\/aside>/gi, '')\n  .replace(/<iframe[\\s\\S]*?<\\/iframe>/gi, '')\n  .replace(/<canvas[\\s\\S]*?<\\/canvas>/gi, '')\n  .replace(/<figure[\\s\\S]*?<\\/figure>/gi, '')\n  .replace(/<img\\b[^>]*>/gi, '');\n\nreturn [\n  {\n    json: {\n      body: cleanedHtml\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1960,
        440
      ],
      "id": "64282b77-cb58-4c29-a3cf-4337b3e45756",
      "name": "HTML CLEAN Search Page"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "var item = {\n  clinical_trial: {\n    // Infos d'essai clinique ajoutées\n    title: $json.output.title,\n    status: $json.output.status,\n    summary: $json.output.summary,\n    currentEnrollmentCount: $json.output.currentEnrollmentCount,\n    type: $json.output.type,\n    phase: $json.output.phase,\n    organization: $json.output.organization,\n    dates: $json.output.dates,\n    conditions: $json.output.conditions,\n    interventions: $json.output.interventions,\n    eligibility: $json.output.eligibility,\n    sponsor: $json.output.sponsor,\n    collaborators: $json.output.collaborators,\n    contacts: $json.output.contacts,\n    locations: $json.output.locations,\n    sourceMetaData: {\n      originalSourceId: $json.output.originalSourceId,\n      trialSourceUrl: $json.output.trialSourceUrl,\n      dataSource: {\n        name: \"ClinicalTrials.gov public API\",\n        type: \"API\",\n        uri: $('Start Webhook').first().json.query.url\n      }\n    }\n  }\n};\n\nreturn item;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1860,
        440
      ],
      "id": "c8af1142-7fe2-463a-a66a-764d42f8b6ce",
      "name": "Convert To Clinical Trial Data"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1540,
        700
      ],
      "id": "7c9d703f-f47d-4f9c-b036-33c2c8365db1",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "oruZVgUJoQ44mIxe",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1240,
        720
      ],
      "id": "c2bf4db7-583b-4db8-a130-42d1b1c565d6",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "oruZVgUJoQ44mIxe",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d852d495-09d0-4701-8231-607eff11b67e",
              "leftValue": "={{ $json.output }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1200,
        440
      ],
      "id": "bfe05436-7f57-477d-b81d-467ef8568bf6",
      "name": "Check No Output Search Page"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d852d495-09d0-4701-8231-607eff11b67e",
              "leftValue": "={{ $json.output }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1600,
        440
      ],
      "id": "beb1917c-56e4-48b5-8513-fa1ea64a5a93",
      "name": "Check No Output Clinical Trial Page"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      page: $json.page ? $json.page + 1 : $('Pagination Initialisation').first().json.page + 1 ,\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -180,
        220
      ],
      "id": "f0b6df19-a2e6-4f2e-88ec-f82bb8fe4561",
      "name": "Pagination Incrementation1"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "var item = {\n  clinical_trial: {\n    // Infos d'essai clinique ajoutées\n    title: $json.clinical_trial.title,\n    status: $json.clinical_trial.status,\n    summary: $json.clinical_trial.summary,\n    currentEnrollmentCount: $json.clinical_trial.currentEnrollmentCount,\n    type: $json.clinical_trial.type,\n    phase: $json.clinical_trial.phase,\n    organization: $json.clinical_trial.organization,\n    dates: $json.clinical_trial.dates,\n    conditions: $json.clinical_trial.conditions,\n    interventions: $json.clinical_trial.interventions,\n    eligibility: $json.clinical_trial.eligibility,\n    sponsor: $json.clinical_trial.sponsor,\n    collaborators: $json.clinical_trial.collaborators,\n    contacts: $json.clinical_trial.contacts,\n    locations: $json.clinical_trial.locations,\n    sourceMetaData: {\n      originalSourceId: $json.clinical_trial.originalSourceId,\n      trialSourceUrl: $json.clinical_trial.trialSourceUrl,\n      dataSource: {\n        name: \"ClinicalTrials.gov public API\",\n        type: \"API\",\n        uri: $('Start Webhook').first().json.query.url\n      }\n    }\n  }\n};\n\nreturn item;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        100,
        1100
      ],
      "id": "a6011b6b-f3fd-4b87-a363-27cf51862ffa",
      "name": "Convert To Clinical Trial Data1"
    },
    {
      "parameters": {
        "jsCode": "let items = [];\n\nfor (const url of $('AI Agent Search Page').first().json.output.urls) {\n  items.push({\n    json: {\n      url: url\n    }\n  });\n}\n\nreturn items;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -380,
        440
      ],
      "id": "5b05b524-66ec-46ca-8de3-32c514b16498",
      "name": "Urls list for loop"
    }
  ],
  "pinData": {},
  "connections": {
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Pagination Incrementation1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Pdf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Search Page": {
      "main": [
        [
          {
            "node": "Check No Output Search Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Scrape Page": {
      "main": [
        [
          {
            "node": "Check No Output Clinical Trial Page",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Search Page Request": {
      "main": [
        [
          {
            "node": "Get Search Page Body",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Page To Markdown": {
      "main": [
        [
          {
            "node": "AI Agent Search Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Search Page Body": {
      "main": [
        [
          {
            "node": "HTML CLEAN Search Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Clinical Trial Page Body": {
      "main": [
        [
          {
            "node": "HTML CLEAN Clinical Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clinical Trial Page To Markdown": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pagination Initialisation": {
      "main": [
        [
          {
            "node": "Search Page Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start Webhook": {
      "main": [
        [
          {
            "node": "Default Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "URLS OUTPUT SCHEMA PARSER": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent Search Page",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "CLINICAL TRIAL SCHEMA PARSER": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent Scrape Page",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Test Url Search Page": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Not Found Url Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Url Parameter": {
      "main": [
        [
          {
            "node": "Test Url Search Page",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Need Url Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Successfully execution",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Need Pagination Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Successfully execution": {
      "main": [
        [
          {
            "node": "Url Pagination Formater",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Parameters": {
      "main": [
        [
          {
            "node": "Test Backend",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test Backend": {
      "main": [
        [
          {
            "node": "Check Backend Not Launched",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Clinical Trial": {
      "main": [
        [
          {
            "node": "Pagination Incrementation1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Neo4j Not Launched": {
      "main": [
        [
          {
            "node": "Neo4j Not Lauched Error",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Url Parameter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Backend Not Launched": {
      "main": [
        [
          {
            "node": "Backend Not Lauched Error",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Neo4j Not Launched",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Url Pagination Formater": {
      "main": [
        [
          {
            "node": "Pagination Initialisation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request Trinical Trial Page HTML": {
      "main": [
        [
          {
            "node": "Get Clinical Trial Page Body",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Read PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PDF": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent Scrape Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Pdf": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Request Trinical Trial Page HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clinical Trial Info list for loop": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Check Urls",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert To Clinical Trial Data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Clinical Trial1": {
      "main": [
        [
          {
            "node": "Check Urls",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Urls": {
      "main": [
        [
          {
            "node": "Urls list for loop",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pagination Incrementation1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Clinical Trials": {
      "main": [
        [
          {
            "node": "Clinical Trial Info list for loop",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Urls",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Infos": {
      "main": [
        [
          {
            "node": "Check Clinical Trials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML CLEAN Clinical Page": {
      "main": [
        [
          {
            "node": "Clinical Trial Page To Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML CLEAN Search Page": {
      "main": [
        [
          {
            "node": "Search Page To Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert To Clinical Trial Data": {
      "main": [
        [
          {
            "node": "Insert Clinical Trial",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Search Page",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Scrape Page",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Check No Output Search Page": {
      "main": [
        [
          {
            "node": "Check Infos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent Search Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check No Output Clinical Trial Page": {
      "main": [
        [
          {
            "node": "Convert To Clinical Trial Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent Scrape Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pagination Incrementation1": {
      "main": [
        [
          {
            "node": "Pagination Initialisation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert To Clinical Trial Data1": {
      "main": [
        [
          {
            "node": "Insert Clinical Trial1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Urls list for loop": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "fc046065-5ff3-421b-a995-8969aa420243",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d19ad8d6d925953386bcaefd90b1322f319c955024c0f733144adb20b40abd2b"
  },
  "id": "SK0RcNw3jU3PC65K",
  "tags": []
}