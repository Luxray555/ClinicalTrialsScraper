{
  "name": "AI Scraper API",
  "nodes": [
    {
      "parameters": {
        "content": "## Scrape Clinical Trial by URL",
        "height": 720,
        "width": 2060
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6120,
        -800
      ],
      "id": "a46b7a9c-6ef2-4019-a02e-9fc3299fa4e4",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -6340,
        -660
      ],
      "id": "3eb1c4e6-0eb8-4c45-9fed-1de79eb99205",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "model": "mistral-large-latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "typeVersion": 1,
      "position": [
        -7560,
        -280
      ],
      "id": "3a93dfea-1a0c-4f1f-81b7-376d6c3e310a",
      "name": "Mistral Cloud Chat Model",
      "credentials": {
        "mistralCloudApi": {
          "id": "eBAfhPYwoDL6vFvB",
          "name": "Mistral Cloud account"
        }
      }
    },
    {
      "parameters": {
        "model": "mistral-large-latest",
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "typeVersion": 1,
      "position": [
        -4900,
        -240
      ],
      "id": "211ce9d9-7422-4aaa-98d7-02ec65cef84e",
      "name": "Mistral Cloud Chat Model1",
      "credentials": {
        "mistralCloudApi": {
          "id": "eBAfhPYwoDL6vFvB",
          "name": "Mistral Cloud account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Voici l'url de la page de recherche:\n{{ $('Search Page Request').first().json.url }}\nVoici la page html:\n{{ $json.data }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Tu es un expert en extraction d’informations depuis du HTML (web scraping).\nTon rôle est d’analyser une page de recherche d’essais cliniques et de me renvoyer :\n\nLes URLs complètes des essais cliniques listés dans la page (s'ils sont présents) dans le champ urls.\n\nLes informations complètes des essais cliniques qui n'ont pas d'URL de redirection dans leurs page de détail, tu ajoutera leurs informations dans le champ clinical_trials.\nIl ne faut surtout pas que un essai clinique ayant un url de redirection de detail soit également mit dans clinical_trials.\n\nRègles strictes à respecter :\n\nTu ne dois jamais inventer ou deviner d’URL.\n\nSi aucun essai clinique n’est présent (page vide ou fin de pagination), renvoie un objet contenant deux listes vides.\n\nPour les liens relatifs, utilise l’URL source de la page pour les transformer en liens absolus.\n\nTu dois renvoyer le résultat strictement au format JSON SCHEMA suivant :\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"urls\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"format\": \"uri\"\n      }\n    },\n    \"clinical_trials\": {\n      \"type\": \"array\",\n      \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"originalSourceId\": {\n              \"type\": \"string\"\n            },\n            \"trialSourceUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri\"\n            },\n            \"title\": {\n              \"type\": \"string\"\n            },\n            \"currentEnrollmentCount\": {\n              \"type\": \"integer\"\n            },\n            \"organization\": {\n              \"type\": \"string\"\n            },\n            \"summary\": {\n              \"type\": \"string\"\n            },\n            \"status\": {\n              \"type\": \"string\",\n              \"enum\": [\"COMPLETED\", \"TERMINATED\", \"RECRUITING\", \"NOT_YET_RECRUITING\", \"WITHDRAWN\", \"SUSPENDED\", \"UNKNOWN\", \"ACTIVE_NOT_RECRUITING\", \"ENROLLING_BY_INVITATION\", \"APPROVED_FOR_MARKETING\", \"NO_LONGER_AVAILABLE\", \"TEMPORARILY_NOT_AVAILABLE\"]\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\"INTERVENTIONAL\", \"OBSERVATIONAL\", \"EXPANDED_ACCESS\"]\n            },\n            \"phase\": {\n              \"type\": \"string\",\n              \"enum\": [\"EARLY_PHASE1\", \"PHASE1\", \"PHASE2\", \"PHASE3\", \"PHASE4\", \"NA\"]\n            },\n            \"dates\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"startDate\": {\n                  \"type\": \"string\",\n                  \"format\": \"date\"\n                },\n                \"estimatedCompletionDate\": {\n                  \"type\": \"string\",\n                  \"format\": \"date\"\n                }\n              }\n            },\n            \"conditions\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\":{\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"interventions\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\"DRUG\", \"BEHAVIORAL\", \"DEVICE\", \"BIOLOGICAL\", \"OTHER\", \"COMBINATION_PRODUCT\", \"PROCEDURE\", \"RADIATION\", \"DIETARY_SUPPLEMENT\", \"DIAGNOSTIC_TEST\", \"GENETIC\"]\n                  }\n                }\n              }\n            },\n            \"eligibility\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"gender\": {\n                  \"type\": \"string\",\n                  \"enum\": [\"ALL\", \"MALE\", \"FEMALE\"]\n                },\n                \"minAge\": {\n                  \"type\": [\"integer\", \"null\"]\n                },\n                \"maxAge\": {\n                  \"type\": [\"integer\", \"null\"]\n                },\n                \"eligibilityCriteria\": {\n                  \"type\": \"string\",\n                  \"description\": \"Description complete avec les titres des egibilité également avec les saut à la ligne\"\n                }\n              }\n            },\n            \"sponsor\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"collaborators\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"contacts\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"format\": \"email\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"phone\": {\n                    \"type\": \"string\"\n                  },\n                  \"isMainContact\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            },\n            \"locations\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"city\": {\n                    \"type\": \"string\"\n                  },\n                  \"country\": {\n                    \"type\": \"string\"\n                  },\n                  \"facility\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": [\"originalSource_id\", \"trialSource_url\", \"title\", \"currentEnrollmentCount\", \"organization\", \"summary\", \"status\", \"type\", \"phase\", \"dates\", \"conditions\", \"interventions\", \"eligibility\", \"sponsor\", \"collaborators\", \"contacts\", \"locations\"]\n      }\n    }\n  },\n  \"required\": [\"urls\"]\n}\n\nTu dois automatiquement trier chaque essai clinique dans le bon champ :\n\nSi l’essai possède une URL directe (ex. fichier PDF ou page de détail), place-le dans \"urls\".\n\nSinon, extrais toutes les données disponibles et place-le dans \"clinical_trials\"."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -7520,
        -660
      ],
      "id": "4625a9ab-377b-43b6-bd48-4c75be58c355",
      "name": "AI Agent Search Page"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Voici la page html:\n{{ $json.data }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Tu es un expert en analyse HTML et en extraction d'informations web (web scraping). Ton rôle est d'examiner une page d'essaie clinique et d'identifier les données nécessaires requis dans le format JSON attendu ci dessous. Tu dois répondre uniquement en JSON structuré, sans commentaire.\n\nFormat JSON SCHEMA attendu :\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"originalSourceId\": {\n      \"type\": \"string\"\n    },\n    \"trialSourceUrl\": {\n      \"type\": \"string\",\n      \"format\": \"uri\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"currentEnrollmentCount\": {\n      \"type\": \"integer\"\n    },\n    \"organization\": {\n      \"type\": \"string\"\n    },\n    \"summary\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\"COMPLETED\", \"TERMINATED\", \"RECRUITING\", \"NOT_YET_RECRUITING\", \"WITHDRAWN\", \"SUSPENDED\", \"UNKNOWN\", \"ACTIVE_NOT_RECRUITING\", \"ENROLLING_BY_INVITATION\", \"APPROVED_FOR_MARKETING\", \"NO_LONGER_AVAILABLE\", \"TEMPORARILY_NOT_AVAILABLE\"]\n    },\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\"INTERVENTIONAL\", \"OBSERVATIONAL\", \"EXPANDED_ACCESS\"]\n    },\n    \"phase\": {\n      \"type\": \"string\",\n      \"enum\": [\"EARLY_PHASE1\", \"PHASE1\", \"PHASE2\", \"PHASE3\", \"PHASE4\", \"NA\"]\n    },\n    \"dates\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"startDate\": {\n          \"type\": \"string\",\n          \"format\": \"date\"\n        },\n        \"estimatedCompletionDate\": {\n          \"type\": \"string\",\n          \"format\": \"date\"\n        }\n      }\n    },\n    \"conditions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\":{\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"interventions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\"DRUG\", \"BEHAVIORAL\", \"DEVICE\", \"BIOLOGICAL\", \"OTHER\", \"COMBINATION_PRODUCT\", \"PROCEDURE\", \"RADIATION\", \"DIETARY_SUPPLEMENT\", \"DIAGNOSTIC_TEST\", \"GENETIC\"]\n          }\n        }\n      }\n    },\n    \"eligibility\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"gender\": {\n          \"type\": \"string\",\n          \"enum\": [\"ALL\", \"MALE\", \"FEMALE\"]\n        },\n        \"minAge\": {\n          \"type\": [\"integer\", \"null\"]\n        },\n        \"maxAge\": {\n          \"type\": [\"integer\", \"null\"]\n        },\n        \"eligibilityCriteria\": {\n          \"type\": \"string\",\n          \"description\": \"Description complete avec les titres des egibilité également avec les saut à la ligne\"\n        }\n      }\n    },\n    \"sponsor\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"collaborators\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"contacts\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"phone\": {\n            \"type\": \"string\"\n          },\n          \"isMainContact\": {\n            \"type\": \"boolean\"\n          }\n        }\n      }\n    },\n    \"locations\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"city\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\"\n          },\n          \"facility\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": [\"originalSource_id\", \"trialSource_url\", \"title\", \"currentEnrollmentCount\", \"organization\", \"summary\", \"status\", \"type\", \"phase\", \"dates\", \"conditions\", \"interventions\", \"eligibility\", \"sponsor\", \"collaborators\", \"contacts\", \"locations\"]\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -4900,
        -660
      ],
      "id": "8478a669-3302-4966-82f2-7f85fb3c01a7",
      "name": "AI Agent Scrape Page"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        -4820,
        -420
      ],
      "id": "4b469fc0-5037-4977-9221-3dc95750f828",
      "name": "Auto-fixing Output Parser"
    },
    {
      "parameters": {
        "options": {
          "prompt": "Instructions:\n--------------\n{instructions}\n--------------\nCompletion:\n--------------\n{completion}\n--------------\n\nAbove, the Completion did not satisfy the constraints given in the Instructions.\nError:\n--------------\n{error}\n--------------\n\nPlease try again. Please only respond with an answer that satisfies the constraints laid out in the Instructions:"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        -7460,
        -460
      ],
      "id": "50017d69-a628-498c-8a59-a677faef9dd2",
      "name": "Auto-fixing Output Parser1"
    },
    {
      "parameters": {
        "url": "={{ $('Url Pagination Formater').first().json.url }}{{ $json.page }}",
        "options": {
          "waitUntil": "networkidle0"
        }
      },
      "type": "n8n-nodes-puppeteer.puppeteer",
      "typeVersion": 1,
      "position": [
        -8640,
        -660
      ],
      "id": "f11031b5-ab54-4462-ae0c-31205bff552c",
      "name": "Search Page Request"
    },
    {
      "parameters": {
        "html": "={{ $json.body }}",
        "options": {
          "useLinkReferenceDefinitions": true
        }
      },
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        -7840,
        -660
      ],
      "id": "6dba7980-eb0e-4490-ac56-68af107bb621",
      "name": "Search Page To Markdown"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "dataPropertyName": "=body",
        "extractionValues": {
          "values": [
            {
              "key": "body",
              "cssSelector": "body",
              "returnValue": "html"
            }
          ]
        },
        "options": {
          "trimValues": true,
          "cleanUpText": true
        }
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -8340,
        -660
      ],
      "id": "abfd0dde-f82f-4a75-aa9f-62c7d7cd84f6",
      "name": "Get Search Page Body"
    },
    {
      "parameters": {
        "jsCode": "let items = [];\n\nfor (const url of $('AI Agent Search Page').first().json.output.urls) {\n  items.push({\n    json: {\n      url: url\n    }\n  });\n}\n\nreturn items;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6520,
        -660
      ],
      "id": "1e607326-d092-43a0-9eaf-8580236f427e",
      "name": "Urls list for loop"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "dataPropertyName": "=body",
        "extractionValues": {
          "values": [
            {
              "key": "body",
              "cssSelector": "body",
              "returnValue": "html"
            }
          ]
        },
        "options": {
          "trimValues": true,
          "cleanUpText": true
        }
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -5660,
        -660
      ],
      "id": "c79e8604-7cf7-4020-9a30-27bb9a53dd41",
      "name": "Get Clinical Trial Page Body"
    },
    {
      "parameters": {
        "html": "={{ $json.body }}",
        "options": {}
      },
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        -5300,
        -660
      ],
      "id": "043d68cb-f8c4-4f6c-8351-815a0a435608",
      "name": "Clinical Trial Page To Markdown"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "93e7c0f6-ef26-4199-9a75-c111cd00b4fd",
              "name": "page",
              "value": "={{ $json.page ? $json.page + 1 : $('Pagination Initialisation').first().json.page + 1 }}",
              "type": "number"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -6320,
        -880
      ],
      "id": "6fa8956e-065d-4f20-acde-e80f232e1e9a",
      "name": "Pagination Incrementation"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "93e7c0f6-ef26-4199-9a75-c111cd00b4fd",
              "name": "page",
              "value": "={{ $json.page ? $json.page : 1 }}",
              "type": "number"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -8880,
        -660
      ],
      "id": "e14597ab-9b99-4ccc-bb84-08d43c5f7b25",
      "name": "Pagination Initialisation"
    },
    {
      "parameters": {
        "path": "AIScraper",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -11140,
        -640
      ],
      "id": "8388b310-9f8b-4547-bdf8-5f49f70467aa",
      "name": "Start Webhook",
      "webhookId": "c3905bc0-5807-433c-9aae-c77ab59b363f"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"urls\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"format\": \"uri\"\n      }\n    },\n    \"clinical_trials\": {\n      \"type\": \"array\",\n      \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"originalSourceId\": {\n              \"type\": \"string\"\n            },\n            \"trialSourceUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri\"\n            },\n            \"title\": {\n              \"type\": \"string\"\n            },\n            \"currentEnrollmentCount\": {\n              \"type\": \"integer\"\n            },\n            \"organization\": {\n              \"type\": \"string\"\n            },\n            \"summary\": {\n              \"type\": \"string\"\n            },\n            \"status\": {\n              \"type\": \"string\",\n              \"enum\": [\"COMPLETED\", \"TERMINATED\", \"RECRUITING\", \"NOT_YET_RECRUITING\", \"WITHDRAWN\", \"SUSPENDED\", \"UNKNOWN\", \"ACTIVE_NOT_RECRUITING\", \"ENROLLING_BY_INVITATION\", \"APPROVED_FOR_MARKETING\", \"NO_LONGER_AVAILABLE\", \"TEMPORARILY_NOT_AVAILABLE\"]\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\"INTERVENTIONAL\", \"OBSERVATIONAL\", \"EXPANDED_ACCESS\"]\n            },\n            \"phase\": {\n              \"type\": \"string\",\n              \"enum\": [\"EARLY_PHASE1\", \"PHASE1\", \"PHASE2\", \"PHASE3\", \"PHASE4\", \"NA\"]\n            },\n            \"dates\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"startDate\": {\n                  \"type\": \"string\",\n                  \"format\": \"date\"\n                },\n                \"estimatedCompletionDate\": {\n                  \"type\": \"string\",\n                  \"format\": \"date\"\n                }\n              }\n            },\n            \"conditions\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\":{\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"interventions\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\"DRUG\", \"BEHAVIORAL\", \"DEVICE\", \"BIOLOGICAL\", \"OTHER\", \"COMBINATION_PRODUCT\", \"PROCEDURE\", \"RADIATION\", \"DIETARY_SUPPLEMENT\", \"DIAGNOSTIC_TEST\", \"GENETIC\"]\n                  }\n                }\n              }\n            },\n            \"eligibility\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"gender\": {\n                  \"type\": \"string\",\n                  \"enum\": [\"ALL\", \"MALE\", \"FEMALE\"]\n                },\n                \"minAge\": {\n                  \"type\": [\"integer\", \"null\"]\n                },\n                \"maxAge\": {\n                  \"type\": [\"integer\", \"null\"]\n                },\n                \"eligibilityCriteria\": {\n                  \"type\": \"string\",\n                  \"description\": \"Description complete avec les titres des egibilité également avec les saut à la ligne\"\n                }\n              }\n            },\n            \"sponsor\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"collaborators\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"contacts\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"format\": \"email\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"phone\": {\n                    \"type\": \"string\"\n                  },\n                  \"isMainContact\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            },\n            \"locations\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"city\": {\n                    \"type\": \"string\"\n                  },\n                  \"country\": {\n                    \"type\": \"string\"\n                  },\n                  \"facility\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": [\"originalSource_id\", \"trialSource_url\", \"title\", \"currentEnrollmentCount\", \"organization\", \"summary\", \"status\", \"type\", \"phase\", \"dates\", \"conditions\", \"interventions\", \"eligibility\", \"sponsor\", \"collaborators\", \"contacts\", \"locations\"]\n      }\n    }\n  },\n  \"required\": [\"urls\"]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -7320,
        -280
      ],
      "id": "0aa23b72-fb9a-435d-b7d9-4e9359480f5a",
      "name": "URLS OUTPUT SCHEMA PARSER"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"originalSourceId\": {\n      \"type\": \"string\"\n    },\n    \"trialSourceUrl\": {\n      \"type\": \"string\",\n      \"format\": \"uri\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"currentEnrollmentCount\": {\n      \"type\": \"integer\"\n    },\n    \"organization\": {\n      \"type\": \"string\"\n    },\n    \"summary\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\"COMPLETED\", \"TERMINATED\", \"RECRUITING\", \"NOT_YET_RECRUITING\", \"WITHDRAWN\", \"SUSPENDED\", \"UNKNOWN\", \"ACTIVE_NOT_RECRUITING\", \"ENROLLING_BY_INVITATION\", \"APPROVED_FOR_MARKETING\", \"NO_LONGER_AVAILABLE\", \"TEMPORARILY_NOT_AVAILABLE\"]\n    },\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\"INTERVENTIONAL\", \"OBSERVATIONAL\", \"EXPANDED_ACCESS\"]\n    },\n    \"phase\": {\n      \"type\": \"string\",\n      \"enum\": [\"EARLY_PHASE1\", \"PHASE1\", \"PHASE2\", \"PHASE3\", \"PHASE4\", \"NA\"]\n    },\n    \"dates\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"startDate\": {\n          \"type\": \"string\",\n          \"format\": \"date\"\n        },\n        \"estimatedCompletionDate\": {\n          \"type\": \"string\",\n          \"format\": \"date\"\n        }\n      }\n    },\n    \"conditions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\":{\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"interventions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\"DRUG\", \"BEHAVIORAL\", \"DEVICE\", \"BIOLOGICAL\", \"OTHER\", \"COMBINATION_PRODUCT\", \"PROCEDURE\", \"RADIATION\", \"DIETARY_SUPPLEMENT\", \"DIAGNOSTIC_TEST\", \"GENETIC\"]\n          }\n        }\n      }\n    },\n    \"eligibility\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"gender\": {\n          \"type\": \"string\",\n          \"enum\": [\"ALL\", \"MALE\", \"FEMALE\"]\n        },\n        \"minAge\": {\n          \"type\": [\"integer\", \"null\"]\n        },\n        \"maxAge\": {\n          \"type\": [\"integer\", \"null\"]\n        },\n        \"eligibilityCriteria\": {\n          \"type\": \"string\",\n          \"description\": \"Description complete avec les titres des egibilité également avec les saut à la ligne\"\n        }\n      }\n    },\n    \"sponsor\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"collaborators\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"contacts\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"phone\": {\n            \"type\": \"string\"\n          },\n          \"isMainContact\": {\n            \"type\": \"boolean\"\n          }\n        }\n      }\n    },\n    \"locations\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"city\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\"\n          },\n          \"facility\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": [\"originalSource_id\", \"trialSource_url\", \"title\", \"currentEnrollmentCount\", \"organization\", \"summary\", \"status\", \"type\", \"phase\", \"dates\", \"conditions\", \"interventions\", \"eligibility\", \"sponsor\", \"collaborators\", \"contacts\", \"locations\"]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -4640,
        -240
      ],
      "id": "47be77e5-62e5-4ca2-bf8f-eb687789294d",
      "name": "CLINICAL TRIAL SCHEMA PARSER"
    },
    {
      "parameters": {
        "url": "={{ $('Start Webhook').item.json.query.url }}",
        "options": {
          "response": {
            "response": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -9880,
        -640
      ],
      "id": "eae2892e-4054-4896-8bba-cb98630ddfdc",
      "name": "Test Url Search Page",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": \"400\",\n  \"error\": \"Bad Request\",\n  \"message\": \"Missing required parameter: url\",\n  \"timestamp\": \"{{ $now }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -10060,
        -400
      ],
      "id": "bef31b66-1133-429f-b6e6-bfabaa924d0a",
      "name": "Need Url Error"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "502828ba-2866-4cac-892f-16a4b114cf51",
              "leftValue": "={{ $('Start Webhook').item.json.query.url}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -10060,
        -640
      ],
      "id": "5b62ce72-4044-4ca1-9129-7108c1ff4fb9",
      "name": "Check Url Parameter"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b25c948e-20a2-430e-9085-11c6141b4943",
              "leftValue": "={{ $('Start Webhook').item.json.query.paginationParameter }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -9620,
        -640
      ],
      "id": "a786d204-4124-4e9c-8856-f1925f7d45d0",
      "name": "If"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": \"400\",\n  \"error\": \"BadRequest\",\n  \"message\": \"Missing required parameter: paginationParameter\",\n  \"timestamp\": \"{{ $now }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -9560,
        -400
      ],
      "id": "1ead6d55-e31d-4c7a-80d7-b901cf68bfe5",
      "name": "Need Pagination Error"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": 404,\n  \"error\": \"Not Found\",\n  \"message\": \"Provided URL not found or returned a 404 response\",\n  \"timestamp\": \"{{ $now }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -9820,
        -400
      ],
      "id": "739ce1bf-dad0-4dba-9dc3-1401cbef1117",
      "name": "Not Found Url Error"
    },
    {
      "parameters": {
        "content": "## Check Parameters and return statement",
        "height": 660,
        "width": 1520,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -10700,
        -800
      ],
      "id": "0c87abde-e244-47b5-8925-ac818d0c9b43",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Scrape Search Page",
        "height": 680,
        "width": 1860,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -9000,
        -800
      ],
      "id": "8a12da4a-89dc-4a1f-91d0-72aec0e8dd9c",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": 200,\n  \"message\": \"Workflow started successfully\",\n  \"data\": {\n    \"id\": {{ $execution.id }},\n    \"stopUrl\": {\n      \"url\": \"http://localhost:5678/api/v1/executions/{{ $execution.id }}\",\n      \"method\": \"DELETE\"\n    }\n  },\n  \"timestamp\": \"{{$now}}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -9340,
        -660
      ],
      "id": "241c9a78-3f6d-46a9-9aa8-e16ca8b6994a",
      "name": "Successfully execution"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": 500,\n  \"error\": \"Internal Server Error\",\n  \"message\": \"Neo4j connection failed ❌. The database may be offline or unreachable.\",\n  \"service\": \"neo4j\",\n  \"suggestion\": \"Make sure the Neo4j instance is running and the credentials are correct.\",\n  \"timestamp\": \"{{$now}}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -10260,
        -400
      ],
      "id": "b54484b4-8c45-4e6b-996d-748fe4d4bef0",
      "name": "Neo4j Not Lauched Error"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e4e9d764-a9e7-41ba-89a8-45136474b6e2",
              "name": "Backend Endpoint",
              "value": "http://localhost:3000",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -10900,
        -640
      ],
      "id": "3aeab0ec-9416-4908-a283-84c8d9b495d6",
      "name": "Default Parameters"
    },
    {
      "parameters": {
        "content": "## Define Backend Endpoint",
        "height": 340,
        "width": 180,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -10940,
        -800
      ],
      "id": "3114376a-6d6d-4540-9abd-8ad70a96edcd",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "url": "={{ $('Default Parameters').item.json['Backend Endpoint'] }}/clinical-trials/create-or-update",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -10660,
        -640
      ],
      "id": "fb1b9bee-0de1-433a-ad46-ad43280486f8",
      "name": "Test Backend",
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Default Parameters').first().json['Backend Endpoint'] }}/clinical-trials/create-or-update",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.clinical_trial }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4280,
        -660
      ],
      "id": "8658e987-82a5-4b28-b13b-88aee5a3f009",
      "name": "Insert Clinical Trial"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2f2b6ca0-b6ff-4e8a-884b-12865ca0cfb6",
              "leftValue": "={{ $(\"Test Backend\").item.json.error.code }}",
              "rightValue": "ERR_BAD_RESPONSE",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -10260,
        -640
      ],
      "id": "484dd360-8916-4b9d-af5c-f09a17a9d4a6",
      "name": "Check Neo4j Not Launched"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7ab3d289-55b5-42d7-b3f2-4d53b0b4571e",
              "leftValue": "={{ $(\"Test Backend\").item.json.error.code }}",
              "rightValue": "ECONNREFUSED",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -10480,
        -640
      ],
      "id": "b41fadaf-737b-4d5a-a965-66743a8832a4",
      "name": "Check Backend Not Launched"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"statusCode\": 500,\n  \"error\": \"Internal Server Error\",\n  \"message\": \"Backend connection failed ❌. The backend service is down.\",\n  \"service\": \"backend\",\n  \"suggestion\": \"Make sure the Backend instance is running .\",\n  \"timestamp\": \"{{$now}}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -10460,
        -400
      ],
      "id": "ca8f8408-c410-493a-a2dd-052a7b7379da",
      "name": "Backend Not Lauched Error"
    },
    {
      "parameters": {
        "jsCode": "let currentUrl = $('Start Webhook').first().json.query.url;\nconst paramName = $('Start Webhook').first().json.query.paginationParameter\n\nif (currentUrl.includes('?')) {\n  currentUrl += `&${paramName}=`;\n} else {\n  currentUrl += `?${paramName}=`;\n}\n\nreturn {\n  json: {\n    url: currentUrl\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -9140,
        -660
      ],
      "id": "e9dd2396-a9e9-4eff-96fc-620d5f0a40d0",
      "name": "Url Pagination Formater"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {
          "waitUntil": "networkidle0"
        }
      },
      "type": "n8n-nodes-puppeteer.puppeteer",
      "typeVersion": 1,
      "position": [
        -5820,
        -660
      ],
      "id": "d59a29ea-0689-4a3f-aad1-d52384bbce56",
      "name": "Request Trinical Trial Page HTML"
    },
    {
      "parameters": {},
      "name": "Read PDF",
      "type": "n8n-nodes-base.readPDF",
      "position": [
        -5680,
        -440
      ],
      "typeVersion": 1,
      "id": "5d212168-610b-49a5-b181-334c809d2886"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5840,
        -440
      ],
      "id": "54c55476-22fd-468b-a01d-2dc193fa8fa4",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -5500,
        -440
      ],
      "id": "8c061056-d005-4133-9781-2f02a807b3b6",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "54937763-e41c-4c31-b2b5-2b87bef1e972",
              "name": "data",
              "value": "={{ $json.data ? $json.data : $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5080,
        -660
      ],
      "id": "46c66f48-2e83-4da4-8fa0-3f13cb08b614",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f5891d3f-c6f5-4a9c-8dbf-32c03d12420f",
              "leftValue": "={{ $json.url }}",
              "rightValue": ".pdf",
              "operator": {
                "type": "string",
                "operation": "endsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -6080,
        -660
      ],
      "id": "acdc3ded-c79f-4f66-b21a-5dcdb16ab04a",
      "name": "Check Pdf"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -6320,
        120
      ],
      "id": "82acd0ea-6e90-4766-ad5f-b55f0e73334f",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "jsCode": "let items = [];\n\nfor (const clinical_trial of $('AI Agent Search Page').first().json.output.clinical_trials) {\n  items.push({\n    json: {\n      clinical_trial: clinical_trial\n    }\n  });\n}\n\nreturn items;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6540,
        120
      ],
      "id": "c54c1734-b93a-49bb-998f-28d60f7ed7d1",
      "name": "Clinical Trial Info list for loop"
    },
    {
      "parameters": {
        "jsCode": "var item = {\n  clinical_trial: {\n    // Infos d'essai clinique ajoutées\n    title: $input.first().json.clinical_trial.title,\n    status: $input.first().json.clinical_trial.status,\n    summary: $input.first().json.clinical_trial.summary,\n    currentEnrollmentCount: $input.first().json.clinical_trial.currentEnrollmentCount,\n    type: $input.first().json.clinical_trial.type,\n    phase: $input.first().json.clinical_trial.phase,\n    organization: $input.first().json.clinical_trial.organization,\n    dates: $input.first().json.clinical_trial.dates,\n    conditions: $input.first().json.clinical_trial.conditions,\n    interventions: $input.first().json.clinical_trial.interventions,\n    eligibility: $input.first().json.clinical_trial.eligibility,\n    sponsor: $input.first().json.clinical_trial.sponsor,\n    collaborators: $input.first().json.clinical_trial.collaborators,\n    contacts: $input.first().json.clinical_trial.contacts,\n    locations: $input.first().json.clinical_trial.locations,\n    sourceMetaData: {\n      originalSourceId: $input.first().json.clinical_trial.originalSourceId,\n      trialSourceUrl: $input.first().json.clinical_trial.trialSourceUrl,\n      dataSource: {\n        name: \"ClinicalTrials.gov public API\",\n        type: \"API\",\n        uri: $('Start Webhook').first().json.query.url\n      }\n    }\n  }\n};\n\nreturn item;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6040,
        120
      ],
      "id": "6a438887-eded-40c4-8625-31c3abc7fa8b",
      "name": "Convert To Mongo Data1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Default Parameters').item.json['Backend Endpoint'] }}/clinical-trials/create-or-update",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.clinical_trial }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5840,
        120
      ],
      "id": "96b094cc-3c0b-4a66-beab-14d35c5d3390",
      "name": "Insert Clinical Trial1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "df50304b-9461-4987-950e-ecb039a83a4e",
              "leftValue": "={{ $('AI Agent Search Page').item.json.output.urls }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -6700,
        -640
      ],
      "id": "b396a9ac-c5f2-4da9-93be-5b42180517d4",
      "name": "Check Urls"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "af941aaa-4775-418d-993f-3512dafb493f",
              "leftValue": "={{ $('AI Agent Search Page').item.json.output.clinical_trials }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -6720,
        120
      ],
      "id": "04ec91a4-73a1-44d6-ba0e-11fc0d77e488",
      "name": "Check Clinical Trials"
    },
    {
      "parameters": {
        "content": "## Insert no URL Clinical Trials",
        "height": 420,
        "width": 500,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6120,
        -40
      ],
      "id": "0724e98f-11f6-449e-8bed-23aa9cb6f46f",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "65628810-5e3f-4110-8426-f7ca4d17142d",
              "leftValue": "={{ $('AI Agent Search Page').item.json.output.urls }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "8cd302f6-46c6-4e97-85cb-efc2a138f68f",
              "leftValue": "={{ $('AI Agent Search Page').item.json.output.clinical_trials }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -7000,
        -660
      ],
      "id": "10e9361b-6787-480e-83ff-82071c8e3581",
      "name": "Check Infos"
    },
    {
      "parameters": {
        "jsCode": "const html = $input.first().json.body;\n\nconst cleanedHtml = html\n  .replace(/<header[\\s\\S]*?<\\/header>/gi, '')\n  .replace(/<footer[\\s\\S]*?<\\/footer>/gi, '')\n  .replace(/<script[\\s\\S]*?<\\/script>/gi, '')\n  .replace(/<style[\\s\\S]*?<\\/style>/gi, '')\n  .replace(/<nav[\\s\\S]*?<\\/nav>/gi, '')\n  .replace(/<svg[\\s\\S]*?<\\/svg>/gi, '')\n  .replace(/<noscript[\\s\\S]*?<\\/noscript>/gi, '')\n  .replace(/<link[\\s\\S]*?<\\/link>/gi, '')\n  .replace(/<meta[\\s\\S]*?<\\/meta>/gi, '')\n  .replace(/<aside[\\s\\S]*?<\\/aside>/gi, '')\n  .replace(/<iframe[\\s\\S]*?<\\/iframe>/gi, '')\n  .replace(/<canvas[\\s\\S]*?<\\/canvas>/gi, '')\n  .replace(/<figure[\\s\\S]*?<\\/figure>/gi, '')\n  .replace(/<img\\b[^>]*>/gi, '');\n\nreturn [\n  {\n    json: {\n      body: cleanedHtml\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5480,
        -660
      ],
      "id": "04b1f55c-6267-4665-8038-2ec7551ddd27",
      "name": "HTML CLEAN Clinical Page"
    },
    {
      "parameters": {
        "jsCode": "const html = $input.first().json.body;\n\nconst cleanedHtml = html\n  .replace(/<header[\\s\\S]*?<\\/header>/gi, '')\n  .replace(/<footer[\\s\\S]*?<\\/footer>/gi, '')\n  .replace(/<script[\\s\\S]*?<\\/script>/gi, '')\n  .replace(/<style[\\s\\S]*?<\\/style>/gi, '')\n  .replace(/<nav[\\s\\S]*?<\\/nav>/gi, '')\n  .replace(/<svg[\\s\\S]*?<\\/svg>/gi, '')\n  .replace(/<noscript[\\s\\S]*?<\\/noscript>/gi, '')\n  .replace(/<link[\\s\\S]*?<\\/link>/gi, '')\n  .replace(/<meta[\\s\\S]*?<\\/meta>/gi, '')\n  .replace(/<aside[\\s\\S]*?<\\/aside>/gi, '')\n  .replace(/<iframe[\\s\\S]*?<\\/iframe>/gi, '')\n  .replace(/<canvas[\\s\\S]*?<\\/canvas>/gi, '')\n  .replace(/<figure[\\s\\S]*?<\\/figure>/gi, '')\n  .replace(/<img\\b[^>]*>/gi, '');\n\nreturn [\n  {\n    json: {\n      body: cleanedHtml\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -8100,
        -660
      ],
      "id": "df0344ca-d1e8-400b-a24b-29471d928b4a",
      "name": "HTML CLEAN Search Page"
    },
    {
      "parameters": {
        "jsCode": "var item = {\n  clinical_trial: {\n    // Infos d'essai clinique ajoutées\n    title: $input.first().json.output.title,\n    status: $input.first().json.output.status,\n    summary: $input.first().json.output.summary,\n    currentEnrollmentCount: $input.first().json.output.currentEnrollmentCount,\n    type: $input.first().json.output.type,\n    phase: $input.first().json.output.phase,\n    organization: $input.first().json.output.organization,\n    dates: $input.first().json.output.dates,\n    conditions: $input.first().json.output.conditions,\n    interventions: $input.first().json.output.interventions,\n    eligibility: $input.first().json.output.eligibility,\n    sponsor: $input.first().json.output.sponsor,\n    collaborators: $input.first().json.output.collaborators,\n    contacts: $input.first().json.output.contacts,\n    locations: $input.first().json.output.locations,\n    sourceMetaData: {\n      originalSourceId: $input.first().json.output.originalSourceId,\n      trialSourceUrl: $input.first().json.output.trialSourceUrl,\n      dataSource: {\n        name: \"ClinicalTrials.gov public API\",\n        type: \"API\",\n        uri: $('Start Webhook').first().json.query.url\n      }\n    }\n  }\n};\n\nreturn item;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4520,
        -660
      ],
      "id": "a31e3f40-49d7-4929-9b8f-63e69dc01c08",
      "name": "Convert To Clinical Trial Data"
    }
  ],
  "pinData": {},
  "connections": {
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Pagination Incrementation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Pdf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mistral Cloud Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Search Page",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Auto-fixing Output Parser1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Mistral Cloud Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Scrape Page",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Search Page": {
      "main": [
        [
          {
            "node": "Check Infos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Scrape Page": {
      "main": [
        [
          {
            "node": "Convert To Clinical Trial Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent Scrape Page",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent Search Page",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Search Page Request": {
      "main": [
        [
          {
            "node": "Get Search Page Body",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Page To Markdown": {
      "main": [
        [
          {
            "node": "AI Agent Search Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Search Page Body": {
      "main": [
        [
          {
            "node": "HTML CLEAN Search Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Urls list for loop": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Clinical Trial Page Body": {
      "main": [
        [
          {
            "node": "HTML CLEAN Clinical Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clinical Trial Page To Markdown": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pagination Incrementation": {
      "main": [
        [
          {
            "node": "Pagination Initialisation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pagination Initialisation": {
      "main": [
        [
          {
            "node": "Search Page Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start Webhook": {
      "main": [
        [
          {
            "node": "Default Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "URLS OUTPUT SCHEMA PARSER": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "CLINICAL TRIAL SCHEMA PARSER": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Test Url Search Page": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Not Found Url Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Url Parameter": {
      "main": [
        [
          {
            "node": "Test Url Search Page",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Need Url Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Successfully execution",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Need Pagination Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Successfully execution": {
      "main": [
        [
          {
            "node": "Url Pagination Formater",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Parameters": {
      "main": [
        [
          {
            "node": "Test Backend",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test Backend": {
      "main": [
        [
          {
            "node": "Check Backend Not Launched",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Clinical Trial": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Neo4j Not Launched": {
      "main": [
        [
          {
            "node": "Neo4j Not Lauched Error",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Url Parameter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Backend Not Launched": {
      "main": [
        [
          {
            "node": "Backend Not Lauched Error",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Neo4j Not Launched",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Url Pagination Formater": {
      "main": [
        [
          {
            "node": "Pagination Initialisation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request Trinical Trial Page HTML": {
      "main": [
        [
          {
            "node": "Get Clinical Trial Page Body",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Read PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PDF": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent Scrape Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Pdf": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Request Trinical Trial Page HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clinical Trial Info list for loop": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Check Urls",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert To Mongo Data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert To Mongo Data1": {
      "main": [
        [
          {
            "node": "Insert Clinical Trial1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Clinical Trial1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Urls": {
      "main": [
        [
          {
            "node": "Urls list for loop",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pagination Incrementation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Clinical Trials": {
      "main": [
        [
          {
            "node": "Clinical Trial Info list for loop",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Urls",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Infos": {
      "main": [
        [
          {
            "node": "Check Clinical Trials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML CLEAN Clinical Page": {
      "main": [
        [
          {
            "node": "Clinical Trial Page To Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML CLEAN Search Page": {
      "main": [
        [
          {
            "node": "Search Page To Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert To Clinical Trial Data": {
      "main": [
        [
          {
            "node": "Insert Clinical Trial",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "fbe6d8ee-955d-481f-866c-e42755d7859b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "14f4d3df5fed8f2097384600eccf148a77385e6a062fb86bbfa855b5102bd332"
  },
  "id": "xlhtqPZO7mesIHQG",
  "tags": []
}